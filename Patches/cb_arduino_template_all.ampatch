From f52a963aadd2364098d3773b60b09f329af3d437 Mon Sep 17 00:00:00 2001
From: oBFusCATed <fuscated@gmail.com>
Date: Thu, 26 Jun 2014 02:18:29 +0300
Subject: [PATCH 01/22] Remove the libraries file, because I don't think it is
 required

---
 files/libraries/libraries.cpp | 62 -------------------------------------------
 wizard.script                 |  1 -
 2 files changed, 63 deletions(-)
 delete mode 100644 files/libraries/libraries.cpp

diff --git a/files/libraries/libraries.cpp b/files/libraries/libraries.cpp
deleted file mode 100644
index 581b63b..0000000
--- a/files/libraries/libraries.cpp
+++ /dev/null
@@ -1,62 +0,0 @@
-#include <Arduino.h>
-
-#if USE_EEPROM
-#include "EEPROM.cpp"
-#endif
-
-#if USE_ETHERNET
-#include "Ethernet.cpp"
-#include "EthernetClient.cpp"
-#include "EthernetServer.cpp"
-#include "EthernetUdp.cpp"
-#endif
-
-#if USE_FIRMATA
-#include "Firmata.cpp"
-#endif
-
-#if USE_LCD
-#include "LiquidCrystal.cpp"
-#endif
-
-#if USE_LCD4884
-#include "LCD4884.cpp"
-#endif
-
-#if USE_OBD
-#include "OBD.cpp"
-#endif
-
-#if USE_SD
-#include "SD.cpp"
-#include "Sd2Card.cpp"
-#include "SdFile.cpp"
-#include "SdVolume.cpp"
-#include "File.cpp"
-#endif
-
-#if USE_SERVO
-#include "Servo.cpp"
-#endif
-
-#if USE_SOFTSERIAL
-#include "SoftwareSerial.cpp"
-#endif
-
-#if USE_SPI
-#include "SPI.cpp"
-#endif
-
-#if USE_STEPPER
-#include "stepper.cpp"
-#endif
-
-#if USE_TINYGPS
-#include "TinyGPS.cpp"
-#endif
-
-#if USE_WIRE
-#include "Wire.cpp"
-#include "twi.c"
-#endif
-
diff --git a/wizard.script b/wizard.script
index df4f7bf..750e822 100644
--- a/wizard.script
+++ b/wizard.script
@@ -135,7 +135,6 @@ function AddCoreSourceCode(project, targetName)
     AddSourceFile(project, targetName, _T("cores/CDC.cpp"));
     AddSourceFile(project, targetName, _T("cores/IPAddress.cpp"));
     AddSourceFile(project, targetName, _T("cores/main.cpp"));
-    AddSourceFile(project, targetName, _T("libraries/libraries.cpp"));
     AddSourceFile(project, targetName, _T("sketch.cpp"));
 }
 
-- 
1.9.5.msysgit.1


From e60c80facf24428af4ef19f8d62796d9e5cbc7d2 Mon Sep 17 00:00:00 2001
From: oBFusCATed <fuscated@gmail.com>
Date: Thu, 26 Jun 2014 02:28:59 +0300
Subject: [PATCH 02/22] Make it possible to disable the simulator targets

---
 wizard.script | 40 +++++++++++++++++++++++++---------------
 wizard.xrc    |  8 ++++++++
 2 files changed, 33 insertions(+), 15 deletions(-)

diff --git a/wizard.script b/wizard.script
index 750e822..48661be 100644
--- a/wizard.script
+++ b/wizard.script
@@ -18,6 +18,7 @@ BaudRate <- _T("57600");
 Libs <- _T("");
 SelectedTargets <- wxArrayString();
 SelectedCompiler <- _T("");
+AddSimTargets <- false;
 
 
 function BeginWizard()
@@ -95,6 +96,7 @@ function OnLeave_targetChoice(fwd)
     }
 
     SelectedCompiler = Wizard.GetItemContainerStringSelection(_T("m_listCompilers"));
+    AddSimTargets = Wizard.IsCheckboxChecked(_T("m_checkSimulator"));
     return true;
 }
 
@@ -353,23 +355,31 @@ function SetupProject(project)
     CreateTarget(project, _T("Microduino Core+ (644P)"), _T("atmega644p"), _T("plus"), _T("115200"), _T("uduino644p"));
     CreateTarget(project, _T("Freematics OBD-II Adapter"), _T("atmega644p"), _T("plus"), _T("115200"), _T("uduino644p"));
 
-    // Debug build target
-    local target = project.GetBuildTarget(Wizard.GetDebugName());
-    if (!IsNull(target))
+    if (AddSimTargets)
     {
-        DebugSymbolsOn(target, GetCompilerID());
-        SetSimTarget(project, target);
-    }
+        // Debug build target
+        local target = project.GetBuildTarget(Wizard.GetDebugName());
+        if (!IsNull(target))
+        {
+            DebugSymbolsOn(target, GetCompilerID());
+            SetSimTarget(project, target);
+        }
 
-    // Release build target
-    target = project.GetBuildTarget(Wizard.GetReleaseName());
-    if (!IsNull(target))
-    {
-        OptimizationsOn(target, GetCompilerID());
-        SetSimTarget(project, target);
-    }
-    project.RenameBuildTarget(0, _T("Simulator - Debug"));
-    project.RenameBuildTarget(1, _T("Simulator - Release"));
+        // Release build target
+        target = project.GetBuildTarget(Wizard.GetReleaseName());
+        if (!IsNull(target))
+        {
+            OptimizationsOn(target, GetCompilerID());
+            SetSimTarget(project, target);
+        }
+        project.RenameBuildTarget(0, _T("Simulator - Debug"));
+        project.RenameBuildTarget(1, _T("Simulator - Release"));
+    }
+    else
+    {
+        project.RemoveBuildTarget(Wizard.GetDebugName());
+        project.RemoveBuildTarget(Wizard.GetReleaseName());
+    }
 
     return true;
 }
diff --git a/wizard.xrc b/wizard.xrc
index 0dc839c..8f822b5 100644
--- a/wizard.xrc
+++ b/wizard.xrc
@@ -153,6 +153,14 @@
 				<border>5</border>
 				<option>1</option>
 			</object>
+			<object class="sizeritem">
+				<object class="wxCheckBox" name="m_checkSimulator">
+					<label>Add simulator targets</label>
+					<checked>1</checked>
+				</object>
+				<flag>wxALL|wxEXPAND|wxALIGN_LEFT|wxALIGN_BOTTOM</flag>
+				<border>5</border>
+			</object>
 		</object>
 	</object>
 </resource>
-- 
1.9.5.msysgit.1


From d7879c3f0d9f2fc8663c4b532f9cf25fdb86084c Mon Sep 17 00:00:00 2001
From: oBFusCATed <fuscated@gmail.com>
Date: Thu, 26 Jun 2014 02:29:33 +0300
Subject: [PATCH 03/22] Run dos2unix on the wizard.script

---
 wizard.script | 746 +++++++++++++++++++++++++++++-----------------------------
 1 file changed, 373 insertions(+), 373 deletions(-)

diff --git a/wizard.script b/wizard.script
index 48661be..7ba6a19 100644
--- a/wizard.script
+++ b/wizard.script
@@ -1,378 +1,378 @@
-////////////////////////////////////////////////////////////////////////////////
-//
-// Code::Blocks new project wizard script
-//
-// Project: Arduino project
-// Author:  Stanley Huang <stanleyhuangyc@gmail.com>
-//
-////////////////////////////////////////////////////////////////////////////////
-
-// Global Vars
-AvrUpload <- false;
-AvrPort <- ""
-AvrLss <- false;         // produce extended list file from ELF output?
-AvrMap <- false;         // produce Symbol Map file from ELF output?
-AvrExtMem <- false;      // Locate .data in on-board SRAM, or external SRAM
-AvrExtMemAddr <- ""      // The external memory address
-BaudRate <- _T("57600");
-Libs <- _T("");
-SelectedTargets <- wxArrayString();
-SelectedCompiler <- _T("");
-AddSimTargets <- false;
-
-
-function BeginWizard()
-{
-    local wiz_type = Wizard.GetWizardType();
-
-    if (wiz_type == wizProject)
-    {
-        local intro_msg = _T(" Welcome to the Arduino Project Wizard\n\n" +
-                             "This wizard will guide you to create a new Arduino project.\nIf you want to be able to upload the built binary to your board,\nbe sure to choose a correct serial port which your board is connected on.\n\n" +
-                             "When you 're ready to proceed, please click \"Next\"\n\n" +
-                             "This wizard is created by Stanley Huang.\nFor updates, please visit http://cb.arduinodev.com\nFor suggestions and bug reports, please send to\n<stanleyhuangyc@gmail.com>");
-
-        Wizard.AddInfoPage(_T("Intro"), intro_msg);
-        Wizard.AddPage(_T("targetChoice"));
-        Wizard.AddPage(_T("processorChoice"));
-        Wizard.AddProjectPathPage();
-//        Wizard.AddCompilerPage(_T("GNU AVR GCC Compiler"), _T("avr*"), true, true);
-//        Wizard.AddBuildTargetPage(_T("test"), false, true, _T(""), _T("avr*"), true);
-    }
-    else
-        print(wiz_type);
-}
-
-function GetFilesDir()
-{
-    local result = _T("arduino/files");
-    return result;
-}
-
-////////////////////////////////////////////////////////////////////////////////
-// Processor choice page
-////////////////////////////////////////////////////////////////////////////////
-
-function OnLeave_processorChoice(fwd)
-{
-    if (fwd)
-    {
-        AvrUpload = Wizard.IsCheckboxChecked(_T("checkboxUpload"));
-        AvrPort = Wizard.GetComboboxStringSelection(_T("uploadPort"));
-        AvrMap = Wizard.IsCheckboxChecked(_T("checkboxMap"));
-        AvrLss = Wizard.IsCheckboxChecked(_T("checkboxLss"));
-        AvrExtMem = Wizard.IsCheckboxChecked(_T("checkboxExtMem"));
-        AvrExtMemAddr = Wizard.GetTextControlValue(_T("textctrlExtMem"));
-
-        if (IsNull(AvrPort))
-            AvrUpload = false;
-    }
-    return true;
-}
-
-////////////////////////////////////////////////////////////////////////////////
-// Target choice page
-////////////////////////////////////////////////////////////////////////////////
-
-function OnEnter_targetChoice(fwd)
-{
-    if (!fwd)
-        return true;
+////////////////////////////////////////////////////////////////////////////////
+//
+// Code::Blocks new project wizard script
+//
+// Project: Arduino project
+// Author:  Stanley Huang <stanleyhuangyc@gmail.com>
+//
+////////////////////////////////////////////////////////////////////////////////
+
+// Global Vars
+AvrUpload <- false;
+AvrPort <- ""
+AvrLss <- false;         // produce extended list file from ELF output?
+AvrMap <- false;         // produce Symbol Map file from ELF output?
+AvrExtMem <- false;      // Locate .data in on-board SRAM, or external SRAM
+AvrExtMemAddr <- ""      // The external memory address
+BaudRate <- _T("57600");
+Libs <- _T("");
+SelectedTargets <- wxArrayString();
+SelectedCompiler <- _T("");
+AddSimTargets <- false;
+
+
+function BeginWizard()
+{
+    local wiz_type = Wizard.GetWizardType();
+
+    if (wiz_type == wizProject)
+    {
+        local intro_msg = _T(" Welcome to the Arduino Project Wizard\n\n" +
+                             "This wizard will guide you to create a new Arduino project.\nIf you want to be able to upload the built binary to your board,\nbe sure to choose a correct serial port which your board is connected on.\n\n" +
+                             "When you 're ready to proceed, please click \"Next\"\n\n" +
+                             "This wizard is created by Stanley Huang.\nFor updates, please visit http://cb.arduinodev.com\nFor suggestions and bug reports, please send to\n<stanleyhuangyc@gmail.com>");
+
+        Wizard.AddInfoPage(_T("Intro"), intro_msg);
+        Wizard.AddPage(_T("targetChoice"));
+        Wizard.AddPage(_T("processorChoice"));
+        Wizard.AddProjectPathPage();
+//        Wizard.AddCompilerPage(_T("GNU AVR GCC Compiler"), _T("avr*"), true, true);
+//        Wizard.AddBuildTargetPage(_T("test"), false, true, _T(""), _T("avr*"), true);
+    }
+    else
+        print(wiz_type);
+}
+
+function GetFilesDir()
+{
+    local result = _T("arduino/files");
+    return result;
+}
+
+////////////////////////////////////////////////////////////////////////////////
+// Processor choice page
+////////////////////////////////////////////////////////////////////////////////
+
+function OnLeave_processorChoice(fwd)
+{
+    if (fwd)
+    {
+        AvrUpload = Wizard.IsCheckboxChecked(_T("checkboxUpload"));
+        AvrPort = Wizard.GetComboboxStringSelection(_T("uploadPort"));
+        AvrMap = Wizard.IsCheckboxChecked(_T("checkboxMap"));
+        AvrLss = Wizard.IsCheckboxChecked(_T("checkboxLss"));
+        AvrExtMem = Wizard.IsCheckboxChecked(_T("checkboxExtMem"));
+        AvrExtMemAddr = Wizard.GetTextControlValue(_T("textctrlExtMem"));
+
+        if (IsNull(AvrPort))
+            AvrUpload = false;
+    }
+    return true;
+}
+
+////////////////////////////////////////////////////////////////////////////////
+// Target choice page
+////////////////////////////////////////////////////////////////////////////////
+
+function OnEnter_targetChoice(fwd)
+{
+    if (!fwd)
+        return true;
     //Wizard.FillComboboxWithCompilers(_T("m_listCompilers"));
-    Wizard.FillContainerWithCompilers(_T("m_listCompilers"), _T("GNU AVR GCC Compiler"), _T("avr*"));
-    return true;
-}
-
-function OnLeave_targetChoice(fwd)
-{
-    if (!fwd)
-        return true;
-    local targets = Wizard.GetCheckListboxStringChecked(_T("m_listTargets"));
-    SelectedTargets = GetArrayFromString(targets, _(";"), true);
-    if (SelectedTargets.GetCount() == 0)
-    {
-        ::ShowMessage(_T("Please choose at least one target!"));
-        return false;
-    }
-
-    SelectedCompiler = Wizard.GetItemContainerStringSelection(_T("m_listCompilers"));
-    AddSimTargets = Wizard.IsCheckboxChecked(_T("m_checkSimulator"));
-    return true;
-}
-
-////////////////////////////////////////////////////////////////////////////////
-
-// call this instead of Wizard.GetCompilerID()
-function GetCompilerID()
+    Wizard.FillContainerWithCompilers(_T("m_listCompilers"), _T("GNU AVR GCC Compiler"), _T("avr*"));
+    return true;
+}
+
+function OnLeave_targetChoice(fwd)
 {
-    return CompilerFactory.GetCompilerIDByName(SelectedCompiler);
-}
-
-function AddSourceFile(project, targetName, filename)
-{
-    local file;
-    file = project.AddFile(targetName, filename, true, true, 50);
-    file.AddBuildTarget(targetName);
-    file.compile = true;
-    file.link = true;
-}
-
-function AddCoreSourceCode(project, targetName)
-{
-    AddSourceFile(project, targetName, _T("cores/WString.cpp"));
-    AddSourceFile(project, targetName, _T("cores/WMath.cpp"));
-    AddSourceFile(project, targetName, _T("cores/wiring.c"));
-    AddSourceFile(project, targetName, _T("cores/wiring_digital.c"));
-    AddSourceFile(project, targetName, _T("cores/wiring_analog.c"));
-    AddSourceFile(project, targetName, _T("cores/wiring_pulse.c"));
-    AddSourceFile(project, targetName, _T("cores/wiring_shift.c"));
-    AddSourceFile(project, targetName, _T("cores/HID.cpp"));
-    AddSourceFile(project, targetName, _T("cores/HardwareSerial.cpp"));
-    AddSourceFile(project, targetName, _T("cores/new.cpp"));
-    AddSourceFile(project, targetName, _T("cores/Print.cpp"));
-    AddSourceFile(project, targetName, _T("cores/Stream.cpp"));
-    AddSourceFile(project, targetName, _T("cores/Tone.cpp"));
-    AddSourceFile(project, targetName, _T("cores/USBCore.cpp"));
-    AddSourceFile(project, targetName, _T("cores/WInterrupts.c"));
-    AddSourceFile(project, targetName, _T("cores/CDC.cpp"));
-    AddSourceFile(project, targetName, _T("cores/IPAddress.cpp"));
-    AddSourceFile(project, targetName, _T("cores/main.cpp"));
-    AddSourceFile(project, targetName, _T("sketch.cpp"));
-}
-
-function CreateTarget(project, targetName, processor, variant, baudrate, boardID)
-{
-    if (SelectedTargets.Index(targetName) == -1)
-        return;
-    local target = project.AddBuildTarget(targetName);
-    // Linker options
-    local lo_map = ::wxString();
-    local lo_extmem = ::wxString();
-
-    // Post Build steps
-    local pb_avrsize = ::wxString();
-    local pb_eephex = ::wxString();
-    local pb_hex = ::wxString();
-    local pb_eepbin = ::wxString();
-    local pb_bin = ::wxString();
-    local pb_lss = ::wxString();
-    local build_core1 = ::wxString();
-    local build_core2 = ::wxString();
-    local optimized = false;
-
-    if (!IsNull(target))
+    if (!fwd)
+        return true;
+    local targets = Wizard.GetCheckListboxStringChecked(_T("m_listTargets"));
+    SelectedTargets = GetArrayFromString(targets, _(";"), true);
+    if (SelectedTargets.GetCount() == 0)
     {
-        target.SetCompilerID(GetCompilerID());
-
-        // Post build commands
-        pb_eephex = _T("avr-objcopy --no-change-warnings -j .eeprom --change-section-lma .eeprom=0 -O ihex \"$(TARGET_OUTPUT_FILE)\" \"$(TARGET_OUTPUT_FILE).eep.hex\"");
-        pb_hex = _T("avr-objcopy -O ihex -R .eeprom -R .eesafe \"$(TARGET_OUTPUT_FILE)\" \"$(TARGET_OUTPUT_FILE).hex\"");
-        pb_eepbin = _T("avr-objcopy --no-change-warnings -j .eeprom --change-section-lma .eeprom=0 -O binary \"$(TARGET_OUTPUT_FILE)\" \"$(TARGET_OUTPUT_FILE).eep.bin\"");
-        pb_bin = _T("avr-objcopy -O binary -R .eeprom -R .eesafe \"$(TARGET_OUTPUT_FILE)\" \"$(TARGET_OUTPUT_FILE).bin\"");
-
-
-        if ( PLATFORM == PLATFORM_MSW )
-            pb_lss = _T("cmd /c \"avr-objdump -h -S $(TARGET_OUTPUT_FILE) > $(TARGET_OUTPUT_FILE).lss\"");
-        else
-            pb_lss = _T("avr-objdump -h -S $(TARGET_OUTPUT_FILE) > $(TARGET_OUTPUT_FILE).lss");
-
-        // avr-size is compiled with patches under winavr to produce a fancy output
-        // which displays the percentage of memory used by the application for the
-        // target mcu. However, this option is not available under standard binutils
-        // avr-size.
-        if (PLATFORM_MSW == PLATFORM)
-            pb_avrsize = _T("avr-size --mcu=$(MCU) --format=avr \"$(TARGET_OUTPUT_FILE)\"");
-        else
-            pb_avrsize = _T("avr-size \"$(TARGET_OUTPUT_FILE)\"");
-
-        // Setup the linker options
-        lo_map = _T("-Wl,-Map=$(TARGET_OUTPUT_FILE).map,--cref");
-
-        // Get external memory start address
-        lo_extmem = _T("-Wl,--section-start=.data=") + AvrExtMemAddr;
-
-            // Project compiler options
-        target.AddCompilerOption(_T("-mmcu=$(MCU)"));
-
-        if (processor.Matches(_T("atmega1280"))) {
-            target.AddCompilerOption(_T("-D__AVR_ATmega1280__"));
-            optimized = true;
-        } else if (processor.Matches(_T("atmega2560"))) {
-            target.AddCompilerOption(_T("-D__AVR_ATmega2560__"));
-            optimized = true;
-        } else if (processor.Matches(_T("atmega168"))) {
-            target.AddCompilerOption(_T("-D__AVR_ATmega168__"));
-        } else if (processor.Matches(_T("atmega32u4"))) {
-            target.AddCompilerOption(_T("-D__AVR_ATmega32U4__"));
-            if (targetName.Matches(_T("Arduino Leonardo"))) {
-                    target.AddCompilerOption(_T("-DUSB_VID=0x2341"));
-                    target.AddCompilerOption(_T("-DUSB_PID=0x8036"));
-            } else if (targetName.Matches(_T("Arduino Esplora"))) {
-                    target.AddCompilerOption(_T("-DUSB_VID=0x2341"));
-                    target.AddCompilerOption(_T("-DUSB_PID=0x8037"));
-            } else if (targetName.Matches(_T("Arduino Micro"))) {
-                    target.AddCompilerOption(_T("-DUSB_VID=0x2341"));
-                    target.AddCompilerOption(_T("-DUSB_PID=0x803C"));
-            }
-        } else if (processor.Matches(_T("atmega644p"))) {
-            target.AddCompilerOption(_T("-D__AVR_ATmega644P__"));
-        } else {
-            target.AddCompilerOption(_T("-D__AVR_ATmega328P__"));
-        }
-
-        target.AddIncludeDir(_T("$(ARDUINO_DIR)/hardware/arduino/cores/arduino"));
-        target.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries"));
-        target.AddIncludeDir(_T("$(ARDUINO_DIR)/hardware/arduino/variants/" + variant));
-
-        // Project linker options
-        target.AddLinkerOption(_T("-mmcu=$(MCU)"));
-
-        if (AvrMap)
-            target.AddLinkerOption(lo_map);
-
-        if (AvrExtMem)
-            target.AddLinkerOption(lo_extmem);
-
-        // Project post-build steps
-        target.AddCommandsAfterBuild(pb_hex);
-        target.AddCommandsAfterBuild(pb_eephex);
-        target.AddCommandsAfterBuild(pb_avrsize);
-
-        if ( AvrLss )
-            target.AddCommandsAfterBuild(pb_lss);
-
-        target.AddLinkerOption(_T("-s"));
-
-        OptimizationsOn(target, GetCompilerID());
-        target.SetTargetType(ttConsoleOnly);
-        target.SetTargetFilenameGenerationPolicy(tgfpPlatformDefault, tgfpNone);
-        target.SetOutputFilename(Wizard.GetReleaseOutputDir() + Wizard.GetProjectName() + _T(".elf"));
-
-        target.SetVar(_T("BOARD"), targetName, false);
-        target.SetVar(_T("BOARD_ID"), boardID, false);
-        target.SetVar(_T("MCU"), processor, false);
-        target.SetVar(_T("UPLOAD_BAUDRATE"), baudrate, false);
-        target.SetVar(_T("UPLOAD_PORT"), AvrPort, false);
-        target.SetVar(_T("ARDUINO_DIR"), _T("$(HOME)/.codeblocks/arduino"), false);
-
-        if (optimized)
-        {
-            target.RemoveCompilerOption(_T("-Os"));
-            target.AddCompilerOption(_T("-O2"));
-        } else {
-            target.AddCompilerOption(_T("-Os"));
-        }
-
-        if (AvrUpload)
-        {
-            if (PLATFORM_MSW == PLATFORM)
-                target.AddCommandsAfterBuild(_T("avrdude -V -C \"$(TARGET_COMPILER_DIR)etc/avrdude.conf\" -p${MCU} -carduino -P\\\\.\\${UPLOAD_PORT} -b${UPLOAD_BAUDRATE} -D -Uflash:w:${TARGET_OUTPUT_DIR}${TARGET_OUTPUT_BASENAME}.elf.hex:i"));
-            else
-                target.AddCommandsAfterBuild(_T("avrdude -V -C /etc/avrdude.conf -p${MCU} -carduino -P${UPLOAD_PORT} -b${UPLOAD_BAUDRATE} -D -Uflash:w:${TARGET_OUTPUT_DIR}${TARGET_OUTPUT_BASENAME}.elf.hex:i"));
-        }
-
-        AddCoreSourceCode(project, targetName);
-    }
-}
-
-function SetSimTarget(project, target)
-{
-    target.AddIncludeDir(_T("$(ARDUINO_DIR)/arduino/cores"));
-    target.AddIncludeDir(_T("$(ARDUINO_DIR)/arduino/variants/standard"));
-    target.AddIncludeDir(_T("$(ARDUINO_DIR)/include"));
-    target.AddCompilerOption(_T("-DARDUSIM"));
-    target.AddCompilerOption(_T("-DENABLE_API_NAME"));
-    target.AddCompilerOption(_T("-D__AVR_ATmega328P__"));
-    target.SetVar(_T("ARDUINO_DIR"), _T("${HOME}/.codeblocks/ardusim"), false);
-    target.SetTargetType(ttConsoleOnly);
-    target.SetTargetFilenameGenerationPolicy(tgfpPlatformDefault, tgfpNone);
-    //target.SetOutputFilename(Wizard.GetDebugOutputDir() + Wizard.GetProjectName());
-    target.SetCompilerID(_T("GCC"));
-}
-
-function SetupProject(project)
+        ::ShowMessage(_T("Please choose at least one target!"));
+        return false;
+    }
+
+    SelectedCompiler = Wizard.GetItemContainerStringSelection(_T("m_listCompilers"));
+    AddSimTargets = Wizard.IsCheckboxChecked(_T("m_checkSimulator"));
+    return true;
+}
+
+////////////////////////////////////////////////////////////////////////////////
+
+// call this instead of Wizard.GetCompilerID()
+function GetCompilerID()
+{
+    return CompilerFactory.GetCompilerIDByName(SelectedCompiler);
+}
+
+function AddSourceFile(project, targetName, filename)
+{
+    local file;
+    file = project.AddFile(targetName, filename, true, true, 50);
+    file.AddBuildTarget(targetName);
+    file.compile = true;
+    file.link = true;
+}
+
+function AddCoreSourceCode(project, targetName)
 {
-    project.SetCompilerID(GetCompilerID());
-    project.AddCompilerOption(_T("-DF_CPU=16000000L"));
-    project.AddCompilerOption(_T("-DARDUINO=101"));
-    project.AddCompilerOption(_T("-fno-exceptions"));
-    project.AddCompilerOption(_T("-ffunction-sections"));
-    project.AddCompilerOption(_T("-fdata-sections"));
-    project.AddCompilerOption(_T("-x c++"));
-    project.AddCompilerOption(_T("-s"));
-    project.AddLinkerOption(_T("-Wl,--gc-sections"));
-
-    project.AddIncludeDir(_T("."));
-    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/EEPROM"));
-    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/Ethernet"));
-    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/Firmata"));
-    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/Flash"));
-    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/LCD4884"));
-    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/LCD4Bit_mod"));
-    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/LiquidCrystal"));
-    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/SD"));
-    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/SD/utility"));
-    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/Servo"));
-    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/SevenSegment"));
-    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/SoftwareSerial"));
-    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/SPI"));
-    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/Stepper"));
-    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/TinyGPS"));
-    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/Wire"));
-    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/Wire/utility"));
-
-    project.AddCompilerOption(_T("-DUSE_EEPROM=0"));
-    project.AddCompilerOption(_T("-DUSE_ETHERNET=0"));
-    project.AddCompilerOption(_T("-DUSE_FIRMATA=0"));
-    project.AddCompilerOption(_T("-DUSE_LCD=0"));
-    project.AddCompilerOption(_T("-DUSE_LCD4884=0"));
-    project.AddCompilerOption(_T("-DUSE_OBD=0"));
-    project.AddCompilerOption(_T("-DUSE_SD=0"));
-    project.AddCompilerOption(_T("-DUSE_SERVO=0"));
-    project.AddCompilerOption(_T("-DUSE_SOFTSERIAL=0"));
-    project.AddCompilerOption(_T("-DUSE_SPI=0"));
-    project.AddCompilerOption(_T("-DUSE_STEPPER=0"));
-    project.AddCompilerOption(_T("-DUSE_TINYGPS=0"));
-    project.AddCompilerOption(_T("-DUSE_WIRE=0"));
-
-    WarningsOn(project, GetCompilerID());
-
-    CreateTarget(project, _T("Arduino Uno"), _T("atmega328p"), _T("standard"), _T("115200"), _T("uno"));
-    CreateTarget(project, _T("Arduino Leonardo"), _T("atmega32u4"), _T("leonardo"), _T("57600"), _T("leonardo"));
-    CreateTarget(project, _T("Arduino Esplora"), _T("atmega32u4"), _T("leonardo"), _T("57600"), _T("esplora"));
-    CreateTarget(project, _T("Arduino Micro"), _T("atmega32u4"), _T("micro"), _T("57600"), _T("micro"));
-    CreateTarget(project, _T("Arduino Duemilanove (328)"), _T("atmega328p"), _T("standard"), _T("57600"), _T("duemilanove328"));
-    CreateTarget(project, _T("Arduino Duemilanove (168)"), _T("atmega168"), _T("standard"), _T("19200"), _T("duemilanove168"));
-    CreateTarget(project, _T("Arduino Nano (328)"), _T("atmega328p"), _T("eightanaloginputs"), _T("57600"), _T("nano328"));
-    CreateTarget(project, _T("Arduino Nano (168)"), _T("atmega168"), _T("eightanaloginputs"), _T("19200"), _T("nano168"));
-    CreateTarget(project, _T("Arduino Mini (328)"), _T("atmega328p"), _T("eightanaloginputs"), _T("57600"), _T("mini328"));
-    CreateTarget(project, _T("Arduino Mini (168)"), _T("atmega168"), _T("eightanaloginputs"), _T("19200"), _T("mini168"));
-    CreateTarget(project, _T("Arduino Pro Mini (328)"), _T("atmega328p"), _T("standard"), _T("57600"), _T("promini328"));
-    CreateTarget(project, _T("Arduino Pro Mini (168)"), _T("atmega168"), _T("standard"), _T("19200"), _T("promini168"));
-    CreateTarget(project, _T("Arduino Mega 2560/ADK"), _T("atmega2560"), _T("mega"), _T("57600"), _T("mega2560"));
-    CreateTarget(project, _T("Arduino Mega 1280"), _T("atmega1280"), _T("mega"), _T("57600"), _T("mega1280"));
-    CreateTarget(project, _T("Arduino Mega 8"), _T("atmega8"), _T("standard"), _T("19200"), _T("mega8"));
-    CreateTarget(project, _T("Microduino Core+ (644P)"), _T("atmega644p"), _T("plus"), _T("115200"), _T("uduino644p"));
-    CreateTarget(project, _T("Freematics OBD-II Adapter"), _T("atmega644p"), _T("plus"), _T("115200"), _T("uduino644p"));
-
+    AddSourceFile(project, targetName, _T("cores/WString.cpp"));
+    AddSourceFile(project, targetName, _T("cores/WMath.cpp"));
+    AddSourceFile(project, targetName, _T("cores/wiring.c"));
+    AddSourceFile(project, targetName, _T("cores/wiring_digital.c"));
+    AddSourceFile(project, targetName, _T("cores/wiring_analog.c"));
+    AddSourceFile(project, targetName, _T("cores/wiring_pulse.c"));
+    AddSourceFile(project, targetName, _T("cores/wiring_shift.c"));
+    AddSourceFile(project, targetName, _T("cores/HID.cpp"));
+    AddSourceFile(project, targetName, _T("cores/HardwareSerial.cpp"));
+    AddSourceFile(project, targetName, _T("cores/new.cpp"));
+    AddSourceFile(project, targetName, _T("cores/Print.cpp"));
+    AddSourceFile(project, targetName, _T("cores/Stream.cpp"));
+    AddSourceFile(project, targetName, _T("cores/Tone.cpp"));
+    AddSourceFile(project, targetName, _T("cores/USBCore.cpp"));
+    AddSourceFile(project, targetName, _T("cores/WInterrupts.c"));
+    AddSourceFile(project, targetName, _T("cores/CDC.cpp"));
+    AddSourceFile(project, targetName, _T("cores/IPAddress.cpp"));
+    AddSourceFile(project, targetName, _T("cores/main.cpp"));
+    AddSourceFile(project, targetName, _T("sketch.cpp"));
+}
+
+function CreateTarget(project, targetName, processor, variant, baudrate, boardID)
+{
+    if (SelectedTargets.Index(targetName) == -1)
+        return;
+    local target = project.AddBuildTarget(targetName);
+    // Linker options
+    local lo_map = ::wxString();
+    local lo_extmem = ::wxString();
+
+    // Post Build steps
+    local pb_avrsize = ::wxString();
+    local pb_eephex = ::wxString();
+    local pb_hex = ::wxString();
+    local pb_eepbin = ::wxString();
+    local pb_bin = ::wxString();
+    local pb_lss = ::wxString();
+    local build_core1 = ::wxString();
+    local build_core2 = ::wxString();
+    local optimized = false;
+
+    if (!IsNull(target))
+    {
+        target.SetCompilerID(GetCompilerID());
+
+        // Post build commands
+        pb_eephex = _T("avr-objcopy --no-change-warnings -j .eeprom --change-section-lma .eeprom=0 -O ihex \"$(TARGET_OUTPUT_FILE)\" \"$(TARGET_OUTPUT_FILE).eep.hex\"");
+        pb_hex = _T("avr-objcopy -O ihex -R .eeprom -R .eesafe \"$(TARGET_OUTPUT_FILE)\" \"$(TARGET_OUTPUT_FILE).hex\"");
+        pb_eepbin = _T("avr-objcopy --no-change-warnings -j .eeprom --change-section-lma .eeprom=0 -O binary \"$(TARGET_OUTPUT_FILE)\" \"$(TARGET_OUTPUT_FILE).eep.bin\"");
+        pb_bin = _T("avr-objcopy -O binary -R .eeprom -R .eesafe \"$(TARGET_OUTPUT_FILE)\" \"$(TARGET_OUTPUT_FILE).bin\"");
+
+
+        if ( PLATFORM == PLATFORM_MSW )
+            pb_lss = _T("cmd /c \"avr-objdump -h -S $(TARGET_OUTPUT_FILE) > $(TARGET_OUTPUT_FILE).lss\"");
+        else
+            pb_lss = _T("avr-objdump -h -S $(TARGET_OUTPUT_FILE) > $(TARGET_OUTPUT_FILE).lss");
+
+        // avr-size is compiled with patches under winavr to produce a fancy output
+        // which displays the percentage of memory used by the application for the
+        // target mcu. However, this option is not available under standard binutils
+        // avr-size.
+        if (PLATFORM_MSW == PLATFORM)
+            pb_avrsize = _T("avr-size --mcu=$(MCU) --format=avr \"$(TARGET_OUTPUT_FILE)\"");
+        else
+            pb_avrsize = _T("avr-size \"$(TARGET_OUTPUT_FILE)\"");
+
+        // Setup the linker options
+        lo_map = _T("-Wl,-Map=$(TARGET_OUTPUT_FILE).map,--cref");
+
+        // Get external memory start address
+        lo_extmem = _T("-Wl,--section-start=.data=") + AvrExtMemAddr;
+
+            // Project compiler options
+        target.AddCompilerOption(_T("-mmcu=$(MCU)"));
+
+        if (processor.Matches(_T("atmega1280"))) {
+            target.AddCompilerOption(_T("-D__AVR_ATmega1280__"));
+            optimized = true;
+        } else if (processor.Matches(_T("atmega2560"))) {
+            target.AddCompilerOption(_T("-D__AVR_ATmega2560__"));
+            optimized = true;
+        } else if (processor.Matches(_T("atmega168"))) {
+            target.AddCompilerOption(_T("-D__AVR_ATmega168__"));
+        } else if (processor.Matches(_T("atmega32u4"))) {
+            target.AddCompilerOption(_T("-D__AVR_ATmega32U4__"));
+            if (targetName.Matches(_T("Arduino Leonardo"))) {
+                    target.AddCompilerOption(_T("-DUSB_VID=0x2341"));
+                    target.AddCompilerOption(_T("-DUSB_PID=0x8036"));
+            } else if (targetName.Matches(_T("Arduino Esplora"))) {
+                    target.AddCompilerOption(_T("-DUSB_VID=0x2341"));
+                    target.AddCompilerOption(_T("-DUSB_PID=0x8037"));
+            } else if (targetName.Matches(_T("Arduino Micro"))) {
+                    target.AddCompilerOption(_T("-DUSB_VID=0x2341"));
+                    target.AddCompilerOption(_T("-DUSB_PID=0x803C"));
+            }
+        } else if (processor.Matches(_T("atmega644p"))) {
+            target.AddCompilerOption(_T("-D__AVR_ATmega644P__"));
+        } else {
+            target.AddCompilerOption(_T("-D__AVR_ATmega328P__"));
+        }
+
+        target.AddIncludeDir(_T("$(ARDUINO_DIR)/hardware/arduino/cores/arduino"));
+        target.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries"));
+        target.AddIncludeDir(_T("$(ARDUINO_DIR)/hardware/arduino/variants/" + variant));
+
+        // Project linker options
+        target.AddLinkerOption(_T("-mmcu=$(MCU)"));
+
+        if (AvrMap)
+            target.AddLinkerOption(lo_map);
+
+        if (AvrExtMem)
+            target.AddLinkerOption(lo_extmem);
+
+        // Project post-build steps
+        target.AddCommandsAfterBuild(pb_hex);
+        target.AddCommandsAfterBuild(pb_eephex);
+        target.AddCommandsAfterBuild(pb_avrsize);
+
+        if ( AvrLss )
+            target.AddCommandsAfterBuild(pb_lss);
+
+        target.AddLinkerOption(_T("-s"));
+
+        OptimizationsOn(target, GetCompilerID());
+        target.SetTargetType(ttConsoleOnly);
+        target.SetTargetFilenameGenerationPolicy(tgfpPlatformDefault, tgfpNone);
+        target.SetOutputFilename(Wizard.GetReleaseOutputDir() + Wizard.GetProjectName() + _T(".elf"));
+
+        target.SetVar(_T("BOARD"), targetName, false);
+        target.SetVar(_T("BOARD_ID"), boardID, false);
+        target.SetVar(_T("MCU"), processor, false);
+        target.SetVar(_T("UPLOAD_BAUDRATE"), baudrate, false);
+        target.SetVar(_T("UPLOAD_PORT"), AvrPort, false);
+        target.SetVar(_T("ARDUINO_DIR"), _T("$(HOME)/.codeblocks/arduino"), false);
+
+        if (optimized)
+        {
+            target.RemoveCompilerOption(_T("-Os"));
+            target.AddCompilerOption(_T("-O2"));
+        } else {
+            target.AddCompilerOption(_T("-Os"));
+        }
+
+        if (AvrUpload)
+        {
+            if (PLATFORM_MSW == PLATFORM)
+                target.AddCommandsAfterBuild(_T("avrdude -V -C \"$(TARGET_COMPILER_DIR)etc/avrdude.conf\" -p${MCU} -carduino -P\\\\.\\${UPLOAD_PORT} -b${UPLOAD_BAUDRATE} -D -Uflash:w:${TARGET_OUTPUT_DIR}${TARGET_OUTPUT_BASENAME}.elf.hex:i"));
+            else
+                target.AddCommandsAfterBuild(_T("avrdude -V -C /etc/avrdude.conf -p${MCU} -carduino -P${UPLOAD_PORT} -b${UPLOAD_BAUDRATE} -D -Uflash:w:${TARGET_OUTPUT_DIR}${TARGET_OUTPUT_BASENAME}.elf.hex:i"));
+        }
+
+        AddCoreSourceCode(project, targetName);
+    }
+}
+
+function SetSimTarget(project, target)
+{
+    target.AddIncludeDir(_T("$(ARDUINO_DIR)/arduino/cores"));
+    target.AddIncludeDir(_T("$(ARDUINO_DIR)/arduino/variants/standard"));
+    target.AddIncludeDir(_T("$(ARDUINO_DIR)/include"));
+    target.AddCompilerOption(_T("-DARDUSIM"));
+    target.AddCompilerOption(_T("-DENABLE_API_NAME"));
+    target.AddCompilerOption(_T("-D__AVR_ATmega328P__"));
+    target.SetVar(_T("ARDUINO_DIR"), _T("${HOME}/.codeblocks/ardusim"), false);
+    target.SetTargetType(ttConsoleOnly);
+    target.SetTargetFilenameGenerationPolicy(tgfpPlatformDefault, tgfpNone);
+    //target.SetOutputFilename(Wizard.GetDebugOutputDir() + Wizard.GetProjectName());
+    target.SetCompilerID(_T("GCC"));
+}
+
+function SetupProject(project)
+{
+    project.SetCompilerID(GetCompilerID());
+    project.AddCompilerOption(_T("-DF_CPU=16000000L"));
+    project.AddCompilerOption(_T("-DARDUINO=101"));
+    project.AddCompilerOption(_T("-fno-exceptions"));
+    project.AddCompilerOption(_T("-ffunction-sections"));
+    project.AddCompilerOption(_T("-fdata-sections"));
+    project.AddCompilerOption(_T("-x c++"));
+    project.AddCompilerOption(_T("-s"));
+    project.AddLinkerOption(_T("-Wl,--gc-sections"));
+
+    project.AddIncludeDir(_T("."));
+    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/EEPROM"));
+    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/Ethernet"));
+    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/Firmata"));
+    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/Flash"));
+    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/LCD4884"));
+    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/LCD4Bit_mod"));
+    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/LiquidCrystal"));
+    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/SD"));
+    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/SD/utility"));
+    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/Servo"));
+    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/SevenSegment"));
+    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/SoftwareSerial"));
+    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/SPI"));
+    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/Stepper"));
+    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/TinyGPS"));
+    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/Wire"));
+    project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/Wire/utility"));
+
+    project.AddCompilerOption(_T("-DUSE_EEPROM=0"));
+    project.AddCompilerOption(_T("-DUSE_ETHERNET=0"));
+    project.AddCompilerOption(_T("-DUSE_FIRMATA=0"));
+    project.AddCompilerOption(_T("-DUSE_LCD=0"));
+    project.AddCompilerOption(_T("-DUSE_LCD4884=0"));
+    project.AddCompilerOption(_T("-DUSE_OBD=0"));
+    project.AddCompilerOption(_T("-DUSE_SD=0"));
+    project.AddCompilerOption(_T("-DUSE_SERVO=0"));
+    project.AddCompilerOption(_T("-DUSE_SOFTSERIAL=0"));
+    project.AddCompilerOption(_T("-DUSE_SPI=0"));
+    project.AddCompilerOption(_T("-DUSE_STEPPER=0"));
+    project.AddCompilerOption(_T("-DUSE_TINYGPS=0"));
+    project.AddCompilerOption(_T("-DUSE_WIRE=0"));
+
+    WarningsOn(project, GetCompilerID());
+
+    CreateTarget(project, _T("Arduino Uno"), _T("atmega328p"), _T("standard"), _T("115200"), _T("uno"));
+    CreateTarget(project, _T("Arduino Leonardo"), _T("atmega32u4"), _T("leonardo"), _T("57600"), _T("leonardo"));
+    CreateTarget(project, _T("Arduino Esplora"), _T("atmega32u4"), _T("leonardo"), _T("57600"), _T("esplora"));
+    CreateTarget(project, _T("Arduino Micro"), _T("atmega32u4"), _T("micro"), _T("57600"), _T("micro"));
+    CreateTarget(project, _T("Arduino Duemilanove (328)"), _T("atmega328p"), _T("standard"), _T("57600"), _T("duemilanove328"));
+    CreateTarget(project, _T("Arduino Duemilanove (168)"), _T("atmega168"), _T("standard"), _T("19200"), _T("duemilanove168"));
+    CreateTarget(project, _T("Arduino Nano (328)"), _T("atmega328p"), _T("eightanaloginputs"), _T("57600"), _T("nano328"));
+    CreateTarget(project, _T("Arduino Nano (168)"), _T("atmega168"), _T("eightanaloginputs"), _T("19200"), _T("nano168"));
+    CreateTarget(project, _T("Arduino Mini (328)"), _T("atmega328p"), _T("eightanaloginputs"), _T("57600"), _T("mini328"));
+    CreateTarget(project, _T("Arduino Mini (168)"), _T("atmega168"), _T("eightanaloginputs"), _T("19200"), _T("mini168"));
+    CreateTarget(project, _T("Arduino Pro Mini (328)"), _T("atmega328p"), _T("standard"), _T("57600"), _T("promini328"));
+    CreateTarget(project, _T("Arduino Pro Mini (168)"), _T("atmega168"), _T("standard"), _T("19200"), _T("promini168"));
+    CreateTarget(project, _T("Arduino Mega 2560/ADK"), _T("atmega2560"), _T("mega"), _T("57600"), _T("mega2560"));
+    CreateTarget(project, _T("Arduino Mega 1280"), _T("atmega1280"), _T("mega"), _T("57600"), _T("mega1280"));
+    CreateTarget(project, _T("Arduino Mega 8"), _T("atmega8"), _T("standard"), _T("19200"), _T("mega8"));
+    CreateTarget(project, _T("Microduino Core+ (644P)"), _T("atmega644p"), _T("plus"), _T("115200"), _T("uduino644p"));
+    CreateTarget(project, _T("Freematics OBD-II Adapter"), _T("atmega644p"), _T("plus"), _T("115200"), _T("uduino644p"));
+
     if (AddSimTargets)
-    {
-        // Debug build target
-        local target = project.GetBuildTarget(Wizard.GetDebugName());
-        if (!IsNull(target))
-        {
-            DebugSymbolsOn(target, GetCompilerID());
-            SetSimTarget(project, target);
-        }
-
-        // Release build target
-        target = project.GetBuildTarget(Wizard.GetReleaseName());
-        if (!IsNull(target))
-        {
-            OptimizationsOn(target, GetCompilerID());
-            SetSimTarget(project, target);
-        }
-        project.RenameBuildTarget(0, _T("Simulator - Debug"));
+    {
+        // Debug build target
+        local target = project.GetBuildTarget(Wizard.GetDebugName());
+        if (!IsNull(target))
+        {
+            DebugSymbolsOn(target, GetCompilerID());
+            SetSimTarget(project, target);
+        }
+
+        // Release build target
+        target = project.GetBuildTarget(Wizard.GetReleaseName());
+        if (!IsNull(target))
+        {
+            OptimizationsOn(target, GetCompilerID());
+            SetSimTarget(project, target);
+        }
+        project.RenameBuildTarget(0, _T("Simulator - Debug"));
         project.RenameBuildTarget(1, _T("Simulator - Release"));
     }
     else
@@ -380,6 +380,6 @@ function SetupProject(project)
         project.RemoveBuildTarget(Wizard.GetDebugName());
         project.RemoveBuildTarget(Wizard.GetReleaseName());
     }
-
-    return true;
-}
+
+    return true;
+}
-- 
1.9.5.msysgit.1


From 9153e3bed6f7d08f40e282735560950bff920f09 Mon Sep 17 00:00:00 2001
From: oBFusCATed <fuscated@gmail.com>
Date: Thu, 26 Jun 2014 02:40:06 +0300
Subject: [PATCH 04/22] Link to libm to prevent linking problems

---
 wizard.script | 1 +
 1 file changed, 1 insertion(+)

diff --git a/wizard.script b/wizard.script
index 7ba6a19..c58fc69 100644
--- a/wizard.script
+++ b/wizard.script
@@ -242,6 +242,7 @@ function CreateTarget(project, targetName, processor, variant, baudrate, boardID
             target.AddCommandsAfterBuild(pb_lss);
 
         target.AddLinkerOption(_T("-s"));
+        target.AddLinkerOption(_T("-lm"));
 
         OptimizationsOn(target, GetCompilerID());
         target.SetTargetType(ttConsoleOnly);
-- 
1.9.5.msysgit.1


From cd073485544c3182f38cf7088606ef06986c2afe Mon Sep 17 00:00:00 2001
From: oBFusCATed <fuscated@gmail.com>
Date: Thu, 26 Jun 2014 02:40:34 +0300
Subject: [PATCH 05/22] Use the latest ARDUINO define, should be made an option

---
 wizard.script | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/wizard.script b/wizard.script
index c58fc69..54d3b6c 100644
--- a/wizard.script
+++ b/wizard.script
@@ -295,7 +295,7 @@ function SetupProject(project)
 {
     project.SetCompilerID(GetCompilerID());
     project.AddCompilerOption(_T("-DF_CPU=16000000L"));
-    project.AddCompilerOption(_T("-DARDUINO=101"));
+    project.AddCompilerOption(_T("-DARDUINO=105"));
     project.AddCompilerOption(_T("-fno-exceptions"));
     project.AddCompilerOption(_T("-ffunction-sections"));
     project.AddCompilerOption(_T("-fdata-sections"));
-- 
1.9.5.msysgit.1


From 5d4e4fe02384581b398f0f308d7e32c424dc63e8 Mon Sep 17 00:00:00 2001
From: oBFusCATed <fuscated@gmail.com>
Date: Thu, 26 Jun 2014 02:41:50 +0300
Subject: [PATCH 06/22] Store object and binaries files in different
 directories

* allows different targets to co-exists without the need for a full rebuild
---
 wizard.script | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/wizard.script b/wizard.script
index 54d3b6c..b773d86 100644
--- a/wizard.script
+++ b/wizard.script
@@ -247,7 +247,8 @@ function CreateTarget(project, targetName, processor, variant, baudrate, boardID
         OptimizationsOn(target, GetCompilerID());
         target.SetTargetType(ttConsoleOnly);
         target.SetTargetFilenameGenerationPolicy(tgfpPlatformDefault, tgfpNone);
-        target.SetOutputFilename(Wizard.GetReleaseOutputDir() + Wizard.GetProjectName() + _T(".elf"));
+        target.SetOutputFilename(_T("bin/") + variant + _T("/") + Wizard.GetProjectName() + _T(".elf"));
+        target.SetObjectOutput(_T(".objs/") + variant);
 
         target.SetVar(_T("BOARD"), targetName, false);
         target.SetVar(_T("BOARD_ID"), boardID, false);
-- 
1.9.5.msysgit.1


From bc0d58bfaa1e390e1ad474a432ea310837708158 Mon Sep 17 00:00:00 2001
From: oBFusCATed <fuscated@gmail.com>
Date: Thu, 26 Jun 2014 02:57:02 +0300
Subject: [PATCH 07/22] Revert "Remove the libraries file, because I don't
 think it is required"

This reverts commit f52a963aadd2364098d3773b60b09f329af3d437.
---
 files/libraries/libraries.cpp | 62 +++++++++++++++++++++++++++++++++++++++++++
 wizard.script                 |  1 +
 2 files changed, 63 insertions(+)
 create mode 100644 files/libraries/libraries.cpp

diff --git a/files/libraries/libraries.cpp b/files/libraries/libraries.cpp
new file mode 100644
index 0000000..581b63b
--- /dev/null
+++ b/files/libraries/libraries.cpp
@@ -0,0 +1,62 @@
+#include <Arduino.h>
+
+#if USE_EEPROM
+#include "EEPROM.cpp"
+#endif
+
+#if USE_ETHERNET
+#include "Ethernet.cpp"
+#include "EthernetClient.cpp"
+#include "EthernetServer.cpp"
+#include "EthernetUdp.cpp"
+#endif
+
+#if USE_FIRMATA
+#include "Firmata.cpp"
+#endif
+
+#if USE_LCD
+#include "LiquidCrystal.cpp"
+#endif
+
+#if USE_LCD4884
+#include "LCD4884.cpp"
+#endif
+
+#if USE_OBD
+#include "OBD.cpp"
+#endif
+
+#if USE_SD
+#include "SD.cpp"
+#include "Sd2Card.cpp"
+#include "SdFile.cpp"
+#include "SdVolume.cpp"
+#include "File.cpp"
+#endif
+
+#if USE_SERVO
+#include "Servo.cpp"
+#endif
+
+#if USE_SOFTSERIAL
+#include "SoftwareSerial.cpp"
+#endif
+
+#if USE_SPI
+#include "SPI.cpp"
+#endif
+
+#if USE_STEPPER
+#include "stepper.cpp"
+#endif
+
+#if USE_TINYGPS
+#include "TinyGPS.cpp"
+#endif
+
+#if USE_WIRE
+#include "Wire.cpp"
+#include "twi.c"
+#endif
+
diff --git a/wizard.script b/wizard.script
index b773d86..0ffed12 100644
--- a/wizard.script
+++ b/wizard.script
@@ -137,6 +137,7 @@ function AddCoreSourceCode(project, targetName)
     AddSourceFile(project, targetName, _T("cores/CDC.cpp"));
     AddSourceFile(project, targetName, _T("cores/IPAddress.cpp"));
     AddSourceFile(project, targetName, _T("cores/main.cpp"));
+    AddSourceFile(project, targetName, _T("cores/libraries/libraries.cpp"));
     AddSourceFile(project, targetName, _T("sketch.cpp"));
 }
 
-- 
1.9.5.msysgit.1


From 288a47c38c86080b756fbc4ee98403981379615f Mon Sep 17 00:00:00 2001
From: oBFusCATed <fuscated@gmail.com>
Date: Thu, 26 Jun 2014 03:25:07 +0300
Subject: [PATCH 08/22] Some clean up

---
 wizard.script | 3 ---
 1 file changed, 3 deletions(-)

diff --git a/wizard.script b/wizard.script
index 0ffed12..d34cbd2 100644
--- a/wizard.script
+++ b/wizard.script
@@ -36,8 +36,6 @@ function BeginWizard()
         Wizard.AddPage(_T("targetChoice"));
         Wizard.AddPage(_T("processorChoice"));
         Wizard.AddProjectPathPage();
-//        Wizard.AddCompilerPage(_T("GNU AVR GCC Compiler"), _T("avr*"), true, true);
-//        Wizard.AddBuildTargetPage(_T("test"), false, true, _T(""), _T("avr*"), true);
     }
     else
         print(wiz_type);
@@ -289,7 +287,6 @@ function SetSimTarget(project, target)
     target.SetVar(_T("ARDUINO_DIR"), _T("${HOME}/.codeblocks/ardusim"), false);
     target.SetTargetType(ttConsoleOnly);
     target.SetTargetFilenameGenerationPolicy(tgfpPlatformDefault, tgfpNone);
-    //target.SetOutputFilename(Wizard.GetDebugOutputDir() + Wizard.GetProjectName());
     target.SetCompilerID(_T("GCC"));
 }
 
-- 
1.9.5.msysgit.1


From c0e3fb8a43bcf61c1d062fd6c2159f7e8e3a3fdb Mon Sep 17 00:00:00 2001
From: oBFusCATed <fuscated@gmail.com>
Date: Thu, 26 Jun 2014 03:30:10 +0300
Subject: [PATCH 09/22] Add wxChoice control for CPU frequency

---
 wizard.script | 18 +++++++++++++++++-
 wizard.xrc    | 26 ++++++++++++++++++++++++++
 2 files changed, 43 insertions(+), 1 deletion(-)

diff --git a/wizard.script b/wizard.script
index d34cbd2..8d5b9b9 100644
--- a/wizard.script
+++ b/wizard.script
@@ -19,6 +19,7 @@ Libs <- _T("");
 SelectedTargets <- wxArrayString();
 SelectedCompiler <- _T("");
 AddSimTargets <- false;
+ComboboxFreq <- 0;
 
 
 function BeginWizard()
@@ -61,6 +62,7 @@ function OnLeave_processorChoice(fwd)
         AvrLss = Wizard.IsCheckboxChecked(_T("checkboxLss"));
         AvrExtMem = Wizard.IsCheckboxChecked(_T("checkboxExtMem"));
         AvrExtMemAddr = Wizard.GetTextControlValue(_T("textctrlExtMem"));
+        ComboboxFreq = Wizard.GetComboboxSelection(_T("comboboxFreq"));
 
         if (IsNull(AvrPort))
             AvrUpload = false;
@@ -139,6 +141,16 @@ function AddCoreSourceCode(project, targetName)
     AddSourceFile(project, targetName, _T("sketch.cpp"));
 }
 
+function SetTargetFreq(target)
+{
+    if (ComboboxFreq == 2)
+        target.AddCompilerOption(_T("-DF_CPU=8000000L"));
+    else if (ComboboxFreq == 1)
+        target.AddCompilerOption(_T("-DF_CPU=12000000L"));
+    else
+        target.AddCompilerOption(_T("-DF_CPU=16000000L"));
+}
+
 function CreateTarget(project, targetName, processor, variant, baudrate, boardID)
 {
     if (SelectedTargets.Index(targetName) == -1)
@@ -193,6 +205,8 @@ function CreateTarget(project, targetName, processor, variant, baudrate, boardID
             // Project compiler options
         target.AddCompilerOption(_T("-mmcu=$(MCU)"));
 
+        SetTargetFreq(target);
+
         if (processor.Matches(_T("atmega1280"))) {
             target.AddCompilerOption(_T("-D__AVR_ATmega1280__"));
             optimized = true;
@@ -281,6 +295,9 @@ function SetSimTarget(project, target)
     target.AddIncludeDir(_T("$(ARDUINO_DIR)/arduino/cores"));
     target.AddIncludeDir(_T("$(ARDUINO_DIR)/arduino/variants/standard"));
     target.AddIncludeDir(_T("$(ARDUINO_DIR)/include"));
+
+    SetTargetFreq(target);
+
     target.AddCompilerOption(_T("-DARDUSIM"));
     target.AddCompilerOption(_T("-DENABLE_API_NAME"));
     target.AddCompilerOption(_T("-D__AVR_ATmega328P__"));
@@ -293,7 +310,6 @@ function SetSimTarget(project, target)
 function SetupProject(project)
 {
     project.SetCompilerID(GetCompilerID());
-    project.AddCompilerOption(_T("-DF_CPU=16000000L"));
     project.AddCompilerOption(_T("-DARDUINO=105"));
     project.AddCompilerOption(_T("-fno-exceptions"));
     project.AddCompilerOption(_T("-ffunction-sections"));
diff --git a/wizard.xrc b/wizard.xrc
index 8f822b5..f0b12aa 100644
--- a/wizard.xrc
+++ b/wizard.xrc
@@ -26,6 +26,32 @@
 				<border>5</border>
 			</object>
 			<object class="sizeritem">
+				<object class="wxBoxSizer">
+					<object class="sizeritem">
+						<object class="wxStaticText" name="textChoice1">
+							<label>Operating Frequency</label>
+						</object>
+						<flag>wxALL|wxEXPAND|wxALIGN_LEFT|wxALIGN_TOP</flag>
+						<border>5</border>
+					</object>
+					<object class="sizeritem">
+						<object class="wxChoice" name="comboboxFreq">
+							<content>
+								<item>16 Mhz</item>
+								<item>12 Mhz</item>
+								<item>8 Mhz</item>
+							</content>
+							<selection>0</selection>
+						</object>
+						<flag>wxALL|wxEXPAND|wxALIGN_LEFT|wxALIGN_TOP</flag>
+						<border>3</border>
+						<option>1</option>
+					</object>
+				</object>
+				<flag>wxEXPAND|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL</flag>
+				<border>5</border>
+			</object>
+			<object class="sizeritem">
 				<object class="wxStaticLine" name="m_staticline5" />
 				<flag>wxALL|wxEXPAND|wxALIGN_LEFT|wxALIGN_TOP</flag>
 				<border>5</border>
-- 
1.9.5.msysgit.1


From a7384788d92f4dcc0e63c6853d3a492e6144a54b Mon Sep 17 00:00:00 2001
From: oBFusCATed <fuscated@gmail.com>
Date: Thu, 26 Jun 2014 03:30:23 +0300
Subject: [PATCH 10/22] Reorder the controls a bit

---
 wizard.xrc | 34 ++++++++++++++++++++++++----------
 1 file changed, 24 insertions(+), 10 deletions(-)

diff --git a/wizard.xrc b/wizard.xrc
index f0b12aa..7bae55d 100644
--- a/wizard.xrc
+++ b/wizard.xrc
@@ -80,17 +80,31 @@
 				<border>5</border>
 			</object>
 			<object class="sizeritem">
-				<object class="wxComboBox" name="uploadPort">
-					<content>
-						<item>/dev/ttyUSB0</item>
-						<item>/dev/ttyUSB1</item>
-						<item>/dev/ttyUSB2</item>
-						<item>/dev/ttyUSB3</item>
-					</content>
-					<style>wxCB_DROPDOWN</style>
+				<object class="wxBoxSizer">
+					<object class="sizeritem">
+						<object class="wxStaticText" name="ID_STATICTEXT1">
+							<label>Port</label>
+						</object>
+						<flag>wxALL|wxEXPAND|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL</flag>
+						<border>5</border>
+					</object>
+					<object class="sizeritem">
+						<object class="wxComboBox" name="uploadPort">
+							<content>
+								<item>/dev/ttyUSB0</item>
+								<item>/dev/ttyUSB1</item>
+								<item>/dev/ttyUSB2</item>
+								<item>/dev/ttyUSB3</item>
+							</content>
+							<style>wxCB_DROPDOWN</style>
+						</object>
+						<flag>wxALL|wxEXPAND|wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL</flag>
+						<border>5</border>
+					</object>
 				</object>
-				<flag>wxALL|wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL</flag>
+				<flag>wxALL|wxEXPAND|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL</flag>
 				<border>5</border>
+				<option>1</option>
 			</object>
 			<object class="sizeritem">
 				<object class="wxStaticLine" name="m_staticline11" />
@@ -124,7 +138,7 @@
 					<size>226,100</size>
 					<style>wxLB_MULTIPLE|wxLB_SORT</style>
 				</object>
-				<flag>wxALL|wxALIGN_LEFT|wxALIGN_TOP</flag>
+				<flag>wxALL|wxEXPAND|wxALIGN_LEFT|wxALIGN_TOP</flag>
 				<border>5</border>
 			</object>
 		</object>
-- 
1.9.5.msysgit.1


From 92872d6c10387a1ac2bbad2195a3040e25d25dea Mon Sep 17 00:00:00 2001
From: oBFusCATed <fuscated@gmail.com>
Date: Thu, 26 Jun 2014 04:02:33 +0300
Subject: [PATCH 11/22] Add UI for selecting the enabled libraries

---
 wizard.script | 39 ++++++++++++++++++++++++++-------------
 wizard.xrc    |  3 ++-
 2 files changed, 28 insertions(+), 14 deletions(-)

diff --git a/wizard.script b/wizard.script
index 8d5b9b9..7b0baa0 100644
--- a/wizard.script
+++ b/wizard.script
@@ -17,6 +17,7 @@ AvrExtMemAddr <- ""      // The external memory address
 BaudRate <- _T("57600");
 Libs <- _T("");
 SelectedTargets <- wxArrayString();
+SelectedLibraries <- wxArrayString();
 SelectedCompiler <- _T("");
 AddSimTargets <- false;
 ComboboxFreq <- 0;
@@ -66,6 +67,9 @@ function OnLeave_processorChoice(fwd)
 
         if (IsNull(AvrPort))
             AvrUpload = false;
+
+        local libraries = Wizard.GetCheckListboxStringChecked(_T("listLibraries"));
+        SelectedLibraries = GetArrayFromString(libraries, _(";"), true);
     }
     return true;
 }
@@ -141,6 +145,14 @@ function AddCoreSourceCode(project, targetName)
     AddSourceFile(project, targetName, _T("sketch.cpp"));
 }
 
+function AddLibrary(project, name, define)
+{
+    if (SelectedLibraries.Index(name) == -1)
+        project.AddCompilerOption(_T("-DUSE_") + define + _T("=0"));
+    else
+        project.AddCompilerOption(_T("-DUSE_") + define + _T("=1"));
+}
+
 function SetTargetFreq(target)
 {
     if (ComboboxFreq == 2)
@@ -337,19 +349,20 @@ function SetupProject(project)
     project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/Wire"));
     project.AddIncludeDir(_T("$(ARDUINO_DIR)/libraries/Wire/utility"));
 
-    project.AddCompilerOption(_T("-DUSE_EEPROM=0"));
-    project.AddCompilerOption(_T("-DUSE_ETHERNET=0"));
-    project.AddCompilerOption(_T("-DUSE_FIRMATA=0"));
-    project.AddCompilerOption(_T("-DUSE_LCD=0"));
-    project.AddCompilerOption(_T("-DUSE_LCD4884=0"));
-    project.AddCompilerOption(_T("-DUSE_OBD=0"));
-    project.AddCompilerOption(_T("-DUSE_SD=0"));
-    project.AddCompilerOption(_T("-DUSE_SERVO=0"));
-    project.AddCompilerOption(_T("-DUSE_SOFTSERIAL=0"));
-    project.AddCompilerOption(_T("-DUSE_SPI=0"));
-    project.AddCompilerOption(_T("-DUSE_STEPPER=0"));
-    project.AddCompilerOption(_T("-DUSE_TINYGPS=0"));
-    project.AddCompilerOption(_T("-DUSE_WIRE=0"));
+    AddLibrary(project, _T("EEPROM"), _T("EEPROM"));
+    AddLibrary(project, _T("Ethernet"), _T("ETHERNET"));
+    AddLibrary(project, _T("Firmata"), _T("FIRMATA"));
+    AddLibrary(project, _T("Flash"), _T("FLASH"));
+    AddLibrary(project, _T("SevenSegment"), _T("LCD"));
+    AddLibrary(project, _T("LCD4884"), _T("LCD4884"));
+    AddLibrary(project, _T("OBD"), _T("OBD"));
+    AddLibrary(project, _T("SD"), _T("SD"));
+    AddLibrary(project, _T("Servo"), _T("SERVO"));
+    AddLibrary(project, _T("SoftwareSerial"), _T("SOFTSERIAL"));
+    AddLibrary(project, _T("SPI"), _T("SPI"));
+    AddLibrary(project, _T("Stepoer"), _T("STEPPER"));
+    AddLibrary(project, _T("TinyGPS"), _T("TINYGPS"));
+    AddLibrary(project, _T("Wire"), _T("WIRE"));
 
     WarningsOn(project, GetCompilerID());
 
diff --git a/wizard.xrc b/wizard.xrc
index 7bae55d..b37c0b7 100644
--- a/wizard.xrc
+++ b/wizard.xrc
@@ -119,13 +119,14 @@
 				<border>5</border>
 			</object>
 			<object class="sizeritem">
-				<object class="wxCheckListBox" name="m_checkList1">
+				<object class="wxCheckListBox" name="listLibraries">
 					<content>
 						<item>EEPROM</item>
 						<item>Ethernet</item>
 						<item>Firmata</item>
 						<item>Flash</item>
 						<item>LCD4884</item>
+						<item>OBD</item>
 						<item>SD</item>
 						<item>Servo</item>
 						<item>SevenSegment</item>
-- 
1.9.5.msysgit.1


From aaa40558b76cf2ac92f80e5e5a9e916ec261b487 Mon Sep 17 00:00:00 2001
From: oBFusCATed <fuscated@gmail.com>
Date: Thu, 26 Jun 2014 22:15:51 +0300
Subject: [PATCH 12/22] Add initial version of the Readme

---
 README.md | 39 +++++++++++++++++++++++++++++++++++++++
 1 file changed, 39 insertions(+)
 create mode 100644 README.md

diff --git a/README.md b/README.md
new file mode 100644
index 0000000..4250a7d
--- /dev/null
+++ b/README.md
@@ -0,0 +1,39 @@
+# Codeblocks template for Arduino developement
+> &copy; 2014-2014 Teodor Petrov
+> under GNU General Public License
+
+> &copy; 2012-2013 Scott Daniels (<http://provideyourown.com>)
+> under GNU General Public License
+
+> Portions are: &copy; 2012 Stanley Huang (<stanleyhuangyc@gmail.com>)
+> under GNU General Public License
+
+This project provides a project template for the Code::Blocks IDE, which allows easy creation of Arduino projects.
+It is based on several other such templates. The template provided by Code::Blocks Arduino project is used as a base.
+Its main goal is to provide easy to use standalone template, which can be used in vanilla Code::Blocks install.
+
+##Features
+
+* Dedicated project wizard for Arduino development
+* Integrated Arduino core files and libraries
+* Calls AVRDUDE for uploading (Flash and EEPROM) via USB or programmer as a post build step
+* Allows the user to select what targets/devices he/she wants to build for
+* Allows the user to choose the enabled libraries
+* Setups every target to build object and binary files in a separate folders
+
+## Requires
+
+Code::Blocks SVN rev 9832, because there are some changes in the Scripted wizard plugin.
+
+## Install
+
+Certain files should be placed or symlinked inside the User data folder of Code::Blocks.
+On Linux this is /home/$USER/.codeblocks/
+
+1. You should create a symlink to the data folder of your Arduino install (/usr/share/arduino on Linux) to ~/.codeblocks/arduino
+2. You should create a symlink for the wizard. Link the root of this repo to ~/.codeblocks/share/codeblocks/templates/wizard/
+3. You need to install AVR compiler (AVR GCC) and set it up inside Code::Blocks
+
+## Notes
+
+Tested only on Linux. If you test it on Windows or OSX and make changes please provide patches.
\ No newline at end of file
-- 
1.9.5.msysgit.1


From 4b314751fb3993b9e4fd501569f950b5063dccff Mon Sep 17 00:00:00 2001
From: oBFusCATed <fuscated@gmail.com>
Date: Sat, 5 Jul 2014 14:18:08 +0300
Subject: [PATCH 13/22] Add the proper file for including libraries

---
 wizard.script | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/wizard.script b/wizard.script
index 7b0baa0..d48a5d4 100644
--- a/wizard.script
+++ b/wizard.script
@@ -141,7 +141,7 @@ function AddCoreSourceCode(project, targetName)
     AddSourceFile(project, targetName, _T("cores/CDC.cpp"));
     AddSourceFile(project, targetName, _T("cores/IPAddress.cpp"));
     AddSourceFile(project, targetName, _T("cores/main.cpp"));
-    AddSourceFile(project, targetName, _T("cores/libraries/libraries.cpp"));
+    AddSourceFile(project, targetName, _T("libraries/libraries.cpp"));
     AddSourceFile(project, targetName, _T("sketch.cpp"));
 }
 
-- 
1.9.5.msysgit.1


From 98b9d4077981057377a158e30a4165d7532b342d Mon Sep 17 00:00:00 2001
From: oBFusCATed <fuscated@gmail.com>
Date: Sat, 5 Jul 2014 14:19:37 +0300
Subject: [PATCH 14/22] Allow the user to type in the upload port field

---
 README.md     | 4 ++--
 wizard.script | 2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/README.md b/README.md
index 4250a7d..e7ed260 100644
--- a/README.md
+++ b/README.md
@@ -23,7 +23,7 @@ Its main goal is to provide easy to use standalone template, which can be used i
 
 ## Requires
 
-Code::Blocks SVN rev 9832, because there are some changes in the Scripted wizard plugin.
+Code::Blocks SVN rev 9842, because there are some changes in the Scripted wizard plugin.
 
 ## Install
 
@@ -36,4 +36,4 @@ On Linux this is /home/$USER/.codeblocks/
 
 ## Notes
 
-Tested only on Linux. If you test it on Windows or OSX and make changes please provide patches.
\ No newline at end of file
+Tested only on Linux. If you test it on Windows or OSX and make changes please provide patches.
diff --git a/wizard.script b/wizard.script
index d48a5d4..c4b8120 100644
--- a/wizard.script
+++ b/wizard.script
@@ -58,7 +58,7 @@ function OnLeave_processorChoice(fwd)
     if (fwd)
     {
         AvrUpload = Wizard.IsCheckboxChecked(_T("checkboxUpload"));
-        AvrPort = Wizard.GetComboboxStringSelection(_T("uploadPort"));
+        AvrPort = Wizard.GetComboboxValue(_T("uploadPort"));
         AvrMap = Wizard.IsCheckboxChecked(_T("checkboxMap"));
         AvrLss = Wizard.IsCheckboxChecked(_T("checkboxLss"));
         AvrExtMem = Wizard.IsCheckboxChecked(_T("checkboxExtMem"));
-- 
1.9.5.msysgit.1


From dcc360536912e3a3da111d15b044e314546ff939 Mon Sep 17 00:00:00 2001
From: oBFusCATed <fuscated@gmail.com>
Date: Sat, 5 Jul 2014 14:24:16 +0300
Subject: [PATCH 15/22] Implement proper uploading for atmega32u4 based
 Arduinos (leonardo, micro, esplora)

* These arduinos don't have FTDI chip and the usb communication is handled
  by the main CPU.
* To do a proper upload the post build step has to reset the arduino and
  then wait until it restarts in the bootloader.
* This is what this patches does.
* Works only on Linux (probably other unixes)
* Use avr109 programmer mode for avrdude. This is a required on my machine.
---
 wizard.script | 16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)

diff --git a/wizard.script b/wizard.script
index c4b8120..c56f1c4 100644
--- a/wizard.script
+++ b/wizard.script
@@ -292,10 +292,22 @@ function CreateTarget(project, targetName, processor, variant, baudrate, boardID
 
         if (AvrUpload)
         {
+            local programmer = _T("arduino");
             if (PLATFORM_MSW == PLATFORM)
-                target.AddCommandsAfterBuild(_T("avrdude -V -C \"$(TARGET_COMPILER_DIR)etc/avrdude.conf\" -p${MCU} -carduino -P\\\\.\\${UPLOAD_PORT} -b${UPLOAD_BAUDRATE} -D -Uflash:w:${TARGET_OUTPUT_DIR}${TARGET_OUTPUT_BASENAME}.elf.hex:i"));
+                target.AddCommandsAfterBuild(_T("avrdude -V -C \"$(TARGET_COMPILER_DIR)etc/avrdude.conf\" -p${MCU} -c")
+                                             + programmer
+                                             + _T(" -P\\\\.\\${UPLOAD_PORT} -b${UPLOAD_BAUDRATE} -D -Uflash:w:${TARGET_OUTPUT_DIR}${TARGET_OUTPUT_BASENAME}.elf.hex:i"));
             else
-                target.AddCommandsAfterBuild(_T("avrdude -V -C /etc/avrdude.conf -p${MCU} -carduino -P${UPLOAD_PORT} -b${UPLOAD_BAUDRATE} -D -Uflash:w:${TARGET_OUTPUT_DIR}${TARGET_OUTPUT_BASENAME}.elf.hex:i"));
+            {
+                if (processor.Matches(_T("atmega32u4")))
+                {
+                    target.AddCommandsAfterBuild(_T("stty -F ${UPLOAD_PORT} 1200"));
+                    target.AddCommandsAfterBuild(_T("sleep 2"));
+                    programmer = _T("avr109");
+                }
+                target.AddCommandsAfterBuild(_T("avrdude -V -C /etc/avrdude.conf -p${MCU} -c")
+                                             + programmer + _T(" -P${UPLOAD_PORT} -b${UPLOAD_BAUDRATE} -D -Uflash:w:${TARGET_OUTPUT_DIR}${TARGET_OUTPUT_BASENAME}.elf.hex:i"));
+            }
         }
 
         AddCoreSourceCode(project, targetName);
-- 
1.9.5.msysgit.1


From 8340389bcdaf5c998f4151953d130b360d30b8ef Mon Sep 17 00:00:00 2001
From: oBFusCATed <fuscated@gmail.com>
Date: Sun, 6 Jul 2014 15:36:48 +0300
Subject: [PATCH 16/22] Use board id instead of variant when setuping the paths
 for object files and final binaries

---
 wizard.script | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/wizard.script b/wizard.script
index c56f1c4..51d5064 100644
--- a/wizard.script
+++ b/wizard.script
@@ -272,8 +272,8 @@ function CreateTarget(project, targetName, processor, variant, baudrate, boardID
         OptimizationsOn(target, GetCompilerID());
         target.SetTargetType(ttConsoleOnly);
         target.SetTargetFilenameGenerationPolicy(tgfpPlatformDefault, tgfpNone);
-        target.SetOutputFilename(_T("bin/") + variant + _T("/") + Wizard.GetProjectName() + _T(".elf"));
-        target.SetObjectOutput(_T(".objs/") + variant);
+        target.SetOutputFilename(_T("bin/") + boardID + _T("/") + project.GetTitle() + _T(".elf"));
+        target.SetObjectOutput(_T(".objs/") + boardID);
 
         target.SetVar(_T("BOARD"), targetName, false);
         target.SetVar(_T("BOARD_ID"), boardID, false);
-- 
1.9.5.msysgit.1


From f694cee6ea7fb46c7c968cd0190203e6782d8bf9 Mon Sep 17 00:00:00 2001
From: oBFusCATed <fuscated@gmail.com>
Date: Sun, 6 Jul 2014 15:37:26 +0300
Subject: [PATCH 17/22] Use wxString instead of string, to prevent odd problems

---
 wizard.script | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/wizard.script b/wizard.script
index 51d5064..8c623ee 100644
--- a/wizard.script
+++ b/wizard.script
@@ -9,11 +9,11 @@
 
 // Global Vars
 AvrUpload <- false;
-AvrPort <- ""
+AvrPort <- _T("")
 AvrLss <- false;         // produce extended list file from ELF output?
 AvrMap <- false;         // produce Symbol Map file from ELF output?
 AvrExtMem <- false;      // Locate .data in on-board SRAM, or external SRAM
-AvrExtMemAddr <- ""      // The external memory address
+AvrExtMemAddr <- _T("")      // The external memory address
 BaudRate <- _T("57600");
 Libs <- _T("");
 SelectedTargets <- wxArrayString();
-- 
1.9.5.msysgit.1


From 83940d3346b96044afbd4f726c8908b9b9dbf73c Mon Sep 17 00:00:00 2001
From: oBFusCATed <fuscated@gmail.com>
Date: Sun, 6 Jul 2014 16:31:21 +0300
Subject: [PATCH 18/22] Use an array of tables for defining a target's
 parameters

---
 wizard.script | 71 +++++++++++++++++++++++++++++++++++++++++------------------
 1 file changed, 50 insertions(+), 21 deletions(-)

diff --git a/wizard.script b/wizard.script
index 8c623ee..cdfdf9e 100644
--- a/wizard.script
+++ b/wizard.script
@@ -21,6 +21,37 @@ SelectedLibraries <- wxArrayString();
 SelectedCompiler <- _T("");
 AddSimTargets <- false;
 ComboboxFreq <- 0;
+TargetInfos <- [];
+
+function AppendTargetInfos(data, targetName, processor, variant, baudrate, boardID)
+{
+    local item={};
+    item.name <- targetName;
+    item.processor <- processor
+    item.variant <- variant;
+    item.baudrate <- baudrate;
+    item.boardID <- boardID;
+
+    data.append(item);
+}
+
+AppendTargetInfos(TargetInfos, _T("Arduino Uno"), _T("atmega328p"), _T("standard"), _T("115200"), _T("uno"));
+AppendTargetInfos(TargetInfos, _T("Arduino Leonardo"), _T("atmega32u4"), _T("leonardo"), _T("57600"), _T("leonardo"));
+AppendTargetInfos(TargetInfos, _T("Arduino Esplora"), _T("atmega32u4"), _T("leonardo"), _T("57600"), _T("esplora"));
+AppendTargetInfos(TargetInfos, _T("Arduino Micro"), _T("atmega32u4"), _T("micro"), _T("57600"), _T("micro"));
+AppendTargetInfos(TargetInfos, _T("Arduino Duemilanove (328)"), _T("atmega328p"), _T("standard"), _T("57600"), _T("duemilanove328"));
+AppendTargetInfos(TargetInfos, _T("Arduino Duemilanove (168)"), _T("atmega168"), _T("standard"), _T("19200"), _T("duemilanove168"));
+AppendTargetInfos(TargetInfos, _T("Arduino Nano (328)"), _T("atmega328p"), _T("eightanaloginputs"), _T("57600"), _T("nano328"));
+AppendTargetInfos(TargetInfos, _T("Arduino Nano (168)"), _T("atmega168"), _T("eightanaloginputs"), _T("19200"), _T("nano168"));
+AppendTargetInfos(TargetInfos, _T("Arduino Mini (328)"), _T("atmega328p"), _T("eightanaloginputs"), _T("57600"), _T("mini328"));
+AppendTargetInfos(TargetInfos, _T("Arduino Mini (168)"), _T("atmega168"), _T("eightanaloginputs"), _T("19200"), _T("mini168"));
+AppendTargetInfos(TargetInfos, _T("Arduino Pro Mini (328)"), _T("atmega328p"), _T("standard"), _T("57600"), _T("promini328"));
+AppendTargetInfos(TargetInfos, _T("Arduino Pro Mini (168)"), _T("atmega168"), _T("standard"), _T("19200"), _T("promini168"));
+AppendTargetInfos(TargetInfos, _T("Arduino Mega 2560/ADK"), _T("atmega2560"), _T("mega"), _T("57600"), _T("mega2560"));
+AppendTargetInfos(TargetInfos, _T("Arduino Mega 1280"), _T("atmega1280"), _T("mega"), _T("57600"), _T("mega1280"));
+AppendTargetInfos(TargetInfos, _T("Arduino Mega 8"), _T("atmega8"), _T("standard"), _T("19200"), _T("mega8"));
+AppendTargetInfos(TargetInfos, _T("Microduino Core+ (644P)"), _T("atmega644p"), _T("plus"), _T("115200"), _T("uduino644p"));
+AppendTargetInfos(TargetInfos, _T("Freematics OBD-II Adapter"), _T("atmega644p"), _T("plus"), _T("115200"), _T("uduino644p"));
 
 
 function BeginWizard()
@@ -163,11 +194,14 @@ function SetTargetFreq(target)
         target.AddCompilerOption(_T("-DF_CPU=16000000L"));
 }
 
-function CreateTarget(project, targetName, processor, variant, baudrate, boardID)
+function FillTargetData(project, target, info)
 {
-    if (SelectedTargets.Index(targetName) == -1)
-        return;
-    local target = project.AddBuildTarget(targetName);
+    local targetName = info.name;
+    local processor = info.processor;
+    local variant = info.variant;
+    local baudrate = info.baudrate;
+    local boardID = info.boardID;
+
     // Linker options
     local lo_map = ::wxString();
     local lo_extmem = ::wxString();
@@ -314,6 +348,16 @@ function CreateTarget(project, targetName, processor, variant, baudrate, boardID
     }
 }
 
+function CreateTarget(project, info)
+{
+    local targetName = info.name;
+    if (SelectedTargets.Index(targetName) == -1)
+        return;
+
+    local target = project.AddBuildTarget(targetName);
+    FillTargetData(project, target, info);
+}
+
 function SetSimTarget(project, target)
 {
     target.AddIncludeDir(_T("$(ARDUINO_DIR)/arduino/cores"));
@@ -378,23 +422,8 @@ function SetupProject(project)
 
     WarningsOn(project, GetCompilerID());
 
-    CreateTarget(project, _T("Arduino Uno"), _T("atmega328p"), _T("standard"), _T("115200"), _T("uno"));
-    CreateTarget(project, _T("Arduino Leonardo"), _T("atmega32u4"), _T("leonardo"), _T("57600"), _T("leonardo"));
-    CreateTarget(project, _T("Arduino Esplora"), _T("atmega32u4"), _T("leonardo"), _T("57600"), _T("esplora"));
-    CreateTarget(project, _T("Arduino Micro"), _T("atmega32u4"), _T("micro"), _T("57600"), _T("micro"));
-    CreateTarget(project, _T("Arduino Duemilanove (328)"), _T("atmega328p"), _T("standard"), _T("57600"), _T("duemilanove328"));
-    CreateTarget(project, _T("Arduino Duemilanove (168)"), _T("atmega168"), _T("standard"), _T("19200"), _T("duemilanove168"));
-    CreateTarget(project, _T("Arduino Nano (328)"), _T("atmega328p"), _T("eightanaloginputs"), _T("57600"), _T("nano328"));
-    CreateTarget(project, _T("Arduino Nano (168)"), _T("atmega168"), _T("eightanaloginputs"), _T("19200"), _T("nano168"));
-    CreateTarget(project, _T("Arduino Mini (328)"), _T("atmega328p"), _T("eightanaloginputs"), _T("57600"), _T("mini328"));
-    CreateTarget(project, _T("Arduino Mini (168)"), _T("atmega168"), _T("eightanaloginputs"), _T("19200"), _T("mini168"));
-    CreateTarget(project, _T("Arduino Pro Mini (328)"), _T("atmega328p"), _T("standard"), _T("57600"), _T("promini328"));
-    CreateTarget(project, _T("Arduino Pro Mini (168)"), _T("atmega168"), _T("standard"), _T("19200"), _T("promini168"));
-    CreateTarget(project, _T("Arduino Mega 2560/ADK"), _T("atmega2560"), _T("mega"), _T("57600"), _T("mega2560"));
-    CreateTarget(project, _T("Arduino Mega 1280"), _T("atmega1280"), _T("mega"), _T("57600"), _T("mega1280"));
-    CreateTarget(project, _T("Arduino Mega 8"), _T("atmega8"), _T("standard"), _T("19200"), _T("mega8"));
-    CreateTarget(project, _T("Microduino Core+ (644P)"), _T("atmega644p"), _T("plus"), _T("115200"), _T("uduino644p"));
-    CreateTarget(project, _T("Freematics OBD-II Adapter"), _T("atmega644p"), _T("plus"), _T("115200"), _T("uduino644p"));
+    foreach (info in TargetInfos)
+        CreateTarget(project, info);
 
     if (AddSimTargets)
     {
-- 
1.9.5.msysgit.1


From 3eb645c636a26a08c255e41497277b38f1a004f9 Mon Sep 17 00:00:00 2001
From: oBFusCATed <fuscated@gmail.com>
Date: Sun, 6 Jul 2014 16:35:15 +0300
Subject: [PATCH 19/22] Initial support for adding targets to an existing
 project (requires rev9843)

---
 README.md     |  2 +-
 wizard.script | 73 +++++++++++++++++++++++++++++++++++++++++++++++++++--------
 2 files changed, 64 insertions(+), 11 deletions(-)

diff --git a/README.md b/README.md
index e7ed260..f5258b4 100644
--- a/README.md
+++ b/README.md
@@ -23,7 +23,7 @@ Its main goal is to provide easy to use standalone template, which can be used i
 
 ## Requires
 
-Code::Blocks SVN rev 9842, because there are some changes in the Scripted wizard plugin.
+Code::Blocks SVN rev 9843, because there are some changes in the Scripted wizard plugin.
 
 ## Install
 
diff --git a/wizard.script b/wizard.script
index cdfdf9e..93baba2 100644
--- a/wizard.script
+++ b/wizard.script
@@ -53,6 +53,19 @@ AppendTargetInfos(TargetInfos, _T("Arduino Mega 8"), _T("atmega8"), _T("standard
 AppendTargetInfos(TargetInfos, _T("Microduino Core+ (644P)"), _T("atmega644p"), _T("plus"), _T("115200"), _T("uduino644p"));
 AppendTargetInfos(TargetInfos, _T("Freematics OBD-II Adapter"), _T("atmega644p"), _T("plus"), _T("115200"), _T("uduino644p"));
 
+function MakeIntroMessage(type)
+{
+    local str = _T(" Welcome to the ") + type + _T(" Wizard\n\n") +
+                _T("This wizard will guide you to create a new ") + type + _T(".\n") +
+                _T("If you want to be able to upload the built binary to your board,\n") +
+                _T("be sure to choose a correct serial port which your board is connected on.\n\n") +
+                _T("When you're ready to proceed, please click \"Next\"\n\n") +
+                _T("The original author of this wizard is Stanley Huang.\n") +
+                _T("Scott Daniels made it work in vanilla Code::blocks.\n") +
+                _T("Currently maintained by Teodor Petrov.\n") +
+                _T("For updates, please visit https://github.com/obfuscated/cb_arduino_template\n");
+    return str;
+}
 
 function BeginWizard()
 {
@@ -60,18 +73,19 @@ function BeginWizard()
 
     if (wiz_type == wizProject)
     {
-        local intro_msg = _T(" Welcome to the Arduino Project Wizard\n\n" +
-                             "This wizard will guide you to create a new Arduino project.\nIf you want to be able to upload the built binary to your board,\nbe sure to choose a correct serial port which your board is connected on.\n\n" +
-                             "When you 're ready to proceed, please click \"Next\"\n\n" +
-                             "This wizard is created by Stanley Huang.\nFor updates, please visit http://cb.arduinodev.com\nFor suggestions and bug reports, please send to\n<stanleyhuangyc@gmail.com>");
-
-        Wizard.AddInfoPage(_T("Intro"), intro_msg);
+        Wizard.AddInfoPage(_T("Intro"), MakeIntroMessage(_T("Arduino Project")));
         Wizard.AddPage(_T("targetChoice"));
         Wizard.AddPage(_T("processorChoice"));
         Wizard.AddProjectPathPage();
     }
+    else if (wiz_type == wizTarget)
+    {
+        Wizard.AddInfoPage(_T("Intro"), MakeIntroMessage(_T("Arduino Target")));
+        Wizard.AddPage(_T("targetChoice"));
+        Wizard.AddPage(_T("processorChoice"));
+    }
     else
-        print(wiz_type);
+        ::ShowError(_T("Unsupported wizard type started!"));
 }
 
 function GetFilesDir()
@@ -113,7 +127,8 @@ function OnEnter_targetChoice(fwd)
 {
     if (!fwd)
         return true;
-    //Wizard.FillComboboxWithCompilers(_T("m_listCompilers"));
+    if (Wizard.GetWizardType() == wizTarget)
+        Wizard.EnableWindow(_T("m_checkSimulator"), false);
     Wizard.FillContainerWithCompilers(_T("m_listCompilers"), _T("GNU AVR GCC Compiler"), _T("avr*"));
     return true;
 }
@@ -126,12 +141,18 @@ function OnLeave_targetChoice(fwd)
     SelectedTargets = GetArrayFromString(targets, _(";"), true);
     if (SelectedTargets.GetCount() == 0)
     {
-        ::ShowMessage(_T("Please choose at least one target!"));
+        ::ShowError(_T("Please choose at least one target!"));
+        return false;
+    }
+    else if (Wizard.GetWizardType() == wizTarget && SelectedTargets.GetCount() > 1)
+    {
+        ::ShowError(_T("Please choose at most one target!"));
         return false;
     }
 
     SelectedCompiler = Wizard.GetItemContainerStringSelection(_T("m_listCompilers"));
-    AddSimTargets = Wizard.IsCheckboxChecked(_T("m_checkSimulator"));
+    if (Wizard.GetWizardType() == wizProject)
+        AddSimTargets = Wizard.IsCheckboxChecked(_T("m_checkSimulator"));
     return true;
 }
 
@@ -453,3 +474,35 @@ function SetupProject(project)
 
     return true;
 }
+
+function GetTargetName()
+{
+    if (SelectedTargets.GetCount() != 0)
+        return SelectedTargets.Item(0);
+    else
+        return _T("");
+}
+
+function SetupTarget(target, is_debug)
+{
+    local targetName = GetTargetName();
+    local l = TargetInfos.len();
+
+    local targetInfo = null;
+    foreach (info in TargetInfos)
+    {
+        if (info.name.Matches(targetName))
+        {
+            targetInfo = info;
+            break;
+        }
+    }
+    if (targetInfo == null)
+    {
+        ::ShowError(_T("Can't find target: ") + targetName);
+        return false;
+    }
+
+    FillTargetData(target.GetParentProject(), target, targetInfo);
+    return true;
+}
-- 
1.9.5.msysgit.1


From 3b8356a813f7e5237265fd5eeab9b8e05b1ea17a Mon Sep 17 00:00:00 2001
From: oBFusCATed <fuscated@gmail.com>
Date: Sun, 6 Jul 2014 17:04:26 +0300
Subject: [PATCH 20/22] Disable list of libraries for target wizards

---
 wizard.script | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/wizard.script b/wizard.script
index 93baba2..9e0a2a4 100644
--- a/wizard.script
+++ b/wizard.script
@@ -98,6 +98,15 @@ function GetFilesDir()
 // Processor choice page
 ////////////////////////////////////////////////////////////////////////////////
 
+function OnEnter_processorChoice(fwd)
+{
+    if (Wizard.GetWizardType() == wizTarget)
+    {
+        Wizard.EnableWindow(_T("listLibraries"), false);
+    }
+    return true;
+}
+
 function OnLeave_processorChoice(fwd)
 {
     if (fwd)
-- 
1.9.5.msysgit.1


From 35e849c306d2966950ef25f5a85d2346bb354a86 Mon Sep 17 00:00:00 2001
From: oBFusCATed <fuscated@gmail.com>
Date: Sun, 6 Jul 2014 17:04:57 +0300
Subject: [PATCH 21/22] Add ttyACMn to the list of upload ports

---
 wizard.xrc | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/wizard.xrc b/wizard.xrc
index b37c0b7..bc3851c 100644
--- a/wizard.xrc
+++ b/wizard.xrc
@@ -91,6 +91,10 @@
 					<object class="sizeritem">
 						<object class="wxComboBox" name="uploadPort">
 							<content>
+								<item>/dev/ttyACM0</item>
+								<item>/dev/ttyACM1</item>
+								<item>/dev/ttyACM2</item>
+								<item>/dev/ttyACM3</item>
 								<item>/dev/ttyUSB0</item>
 								<item>/dev/ttyUSB1</item>
 								<item>/dev/ttyUSB2</item>
-- 
1.9.5.msysgit.1


From 2a1763129dc2f85d890582e81d89658309cd9d86 Mon Sep 17 00:00:00 2001
From: oBFusCATed <fuscated@gmail.com>
Date: Sun, 6 Jul 2014 17:05:39 +0300
Subject: [PATCH 22/22] Fix a bit the processor choice page

---
 wizard.xrc | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/wizard.xrc b/wizard.xrc
index bc3851c..fce2792 100644
--- a/wizard.xrc
+++ b/wizard.xrc
@@ -31,7 +31,7 @@
 						<object class="wxStaticText" name="textChoice1">
 							<label>Operating Frequency</label>
 						</object>
-						<flag>wxALL|wxEXPAND|wxALIGN_LEFT|wxALIGN_TOP</flag>
+						<flag>wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL</flag>
 						<border>5</border>
 					</object>
 					<object class="sizeritem">
@@ -85,7 +85,7 @@
 						<object class="wxStaticText" name="ID_STATICTEXT1">
 							<label>Port</label>
 						</object>
-						<flag>wxALL|wxEXPAND|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL</flag>
+						<flag>wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL</flag>
 						<border>5</border>
 					</object>
 					<object class="sizeritem">
@@ -107,8 +107,6 @@
 					</object>
 				</object>
 				<flag>wxALL|wxEXPAND|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL</flag>
-				<border>5</border>
-				<option>1</option>
 			</object>
 			<object class="sizeritem">
 				<object class="wxStaticLine" name="m_staticline11" />
@@ -145,6 +143,7 @@
 				</object>
 				<flag>wxALL|wxEXPAND|wxALIGN_LEFT|wxALIGN_TOP</flag>
 				<border>5</border>
+				<option>1</option>
 			</object>
 		</object>
 	</object>
-- 
1.9.5.msysgit.1

