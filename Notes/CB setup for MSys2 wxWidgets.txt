CB setup for MSys2 wxWidgets.txt

# Install MSys2 from http://msys2.github.io/ or http://sourceforge.net/projects/msys2

# Note: for initial installation & setup, please also see this page http://sourceforge.net/p/msys2/wiki/MSYS2%20installation/
# Open MSYS2-shell
# First update msys2 core components (if you have not done it yet): 
update-core
# Close MSYS2-shell; ALT-F4 or the X in the upper right corner is needed to exit out.

# Open MSYS2-shell
pacman -Su
# Exit out of MSYS2-shell, restart MSYS2-shell, then you are ready to use MSYS2-shell.

# Open MSYS2-shell
pacman --version # Pacman v4.2.1-516-g52073-dirty - libalpm v10.0.1

# 64 bit packages
pacman -S mingw-w64-x86_64-gcc
pacman -S mingw-w64-x86_64-wxWidgets

# 32 bit packages
pacman -S mingw-w64-i686-gcc
pacman -S mingw-w64-i686-wxWidgets

# Msys2 packages needed
pacman -S sed                           ## Appears to be needed for wx-config to work


My MSys2 installation folder is C:\Apps64\MSys2

Compiler Install Dir: C:\Apps64\MSys2\mingw32
Additional path: C:\Apps64\MSys2\usr\bin

Compiler Custom Variables
COMPILER_PREFIX=C:/Apps64/MSys2/mingw32

CB Project Custom Variables
WX_CONFIG_CFLAGS=sh.exe -c 'wx-config  --prefix=$(COMPILER_PREFIX) --cflags'
WX_CONFIG_LIBS=sh.exe -c 'wx-config  --prefix=$(COMPILER_PREFIX) --libs'



Stuff I might do in the future below


## Wizard changes needed for wxWidgets wizard to work for MSys2.
Ask if want to use wx-config or not (In Windows the current way is to NOT use wx-config; the MSys2 way uses wx-config)
Ask if sh.exe is needed to use wx-config (It is normmaly needed for MSys2 and Cygwin)
If yes, ask the path to sh.exe
Ask if Cygwin
If Cygwin, ask if using 64bit or 32bit compiler
If Cygwin, ask for Compiler Prefix (Default to native Cygwin Compiler)
Ask if MSys2
If yes, ask if mingw64 or mingw32
Ask for MSys2 or Cygwin install folder
Maybe calculate value needed to check for headers or libs
Create Project Custom Vars
Create Project using created Custom Vars

Done 
Stage 0 create git branch https://github.com/stahta01/codeblocks_https_metadata/tree/feature/wxwidegets_msys2_wizard
Stage 1 of Wizard Changes Apply all my old wxWidgets changes
ToDo
Stage 2 of Wizard Changes get wizard to use wx-config.exe with normal mingw makefile build
Start work on Laptop after I do what can be done on Desktop PC.
Stage 3 of Wizard Changes get wizard to use MSys2 wx-config
Stage 4 of Wizard Changes get wizard to use Cygwin wx-config for native GCC Compiler
Stage 5 of Wizard Changes get wizard to use Cygwin wx-config for MinGW64 64bit GCC Compiler

Wizard script notes below
# need to change WxConf or add WxConfWin
# Should I rename WxConfUnix to something else?
        if (PLATFORM == PLATFORM_MSW)
            Wizard.AddPage(_T("WxConf")); // only for windows
        else
            Wizard.AddPage(_T("WxConfUnix")); // just PCH option

# Wizard pages that are for the old way
// Same page for Windows and Unix
WxIntro
// Seperate page for Windows and Unix
wxVersionPage   // Selects the wxWidgets version
// Same page for Windows and Unix
WxProjDetails   // gets Author info
WxGuiSelect     // gets (wxSmith, wxFormBuilder, or none) and Dialog or Frame.
// only for Unix
WxConfUnix      // just PCH option
// only for windows
WxConf          // gets many types of wxWidgets info
WxConfAdvOpt    // Wizard page to select target type 
WxAddLib        // Add additional wx libraries
WxPath          // gets the path to the wxWidgets lib


# Wizard methods that I need to understand better before I start editing the wizard
Wizard.AddInfoPage
Wizard.AddGenericSingleChoiceListPage
Wizard.AddProjectPathPage
Wizard.AddPage
Wizard.AddCompilerPage
Wizard.AddBuildTargetPage
