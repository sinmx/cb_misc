https://github.com/wxWidgets/wxWidgets/blob/master/docs/contributing/how-to-add-files-to-build-system.md
https://robots.thoughtbot.com/the-magic-behind-configure-make-make-install
http://www.delorie.com/gnu/docs/autoconf/autoconf_13.html
http://openbooks.sourceforge.net/books/wga/generating-makefiles.html
https://sourceforge.net/projects/cygwin-ports/
https://sourceware.org/cygwinports/
https://sourceforge.net/p/cygwin-ports/bakefile/ci/56dd2183eaea310bfb0abe515cc1d0ee5ae8050e/
http://wxcode.sourceforge.net/bakefile.php
http://bakefile.org/doc_legacy/ch02.html

cd ~/devel
git clone https://github.com/vslavik/bakefile.git bakefile-git
cd bakefile-git
git fetch && git checkout legacy-0.2-branch


build/upmake    converts build/files to files.bkl
bakefile_gen    converts *.bkl to many different things.
autoconf        converts configure.ac to configure
configure       converts Makefile.in to Makefile and creates setup.h

autoconf configure.in

Note: the following files are generated using bakefile_gen:
  * build/msw/*
  * makefiles with same names as makefiles in above dirs, Makefile.in files 
    that contain "This makefile was generated by Bakefile" banner and
    VC++ project files in samples, demos and utils directories
  * src/wxWindows.dsp
  * autoconf_inc.m4
  * all Makefile.in files
  (hopefully I didn't forget anything - VS)

autoconf --help
Usage: /usr/bin/autoconf-2.69 [OPTION]... [TEMPLATE-FILE]

Generate a configuration script from a TEMPLATE-FILE if given, or
`configure.ac' if present, or else `configure.in'.  Output is sent
to the standard output if TEMPLATE-FILE is given, else into
`configure'.

Operation modes:
  -h, --help                print this help, then exit
  -V, --version             print version number, then exit
  -v, --verbose             verbosely report processing
  -d, --debug               don't remove temporary files
  -f, --force               consider all files obsolete
  -o, --output=FILE         save output in FILE (stdout is the default)
  -W, --warnings=CATEGORY   report the warnings falling in CATEGORY [syntax]

Warning categories include:
  `cross'         cross compilation issues
  `obsolete'      obsolete constructs
  `syntax'        dubious syntactic constructs
  `all'           all the warnings
  `no-CATEGORY'   turn off the warnings on CATEGORY
  `none'          turn off all the warnings
  `error'         warnings are error

The environment variables `M4' and `WARNINGS' are honored.

Library directories:
  -B, --prepend-include=DIR  prepend directory DIR to search path
  -I, --include=DIR          append directory DIR to search path

Tracing:
  -t, --trace=MACRO[:FORMAT]  report the list of calls to MACRO
  -i, --initialization        also trace Autoconf's initialization process

In tracing mode, no configuration script is created.  FORMAT defaults
to `$f:$l:$n:$%'; see `autom4te --help' for information about FORMAT.

Report bugs to <bug-autoconf@gnu.org>.
GNU Autoconf home page: <http://www.gnu.org/software/autoconf/>.
General help using GNU software: <http://www.gnu.org/gethelp/>.
