####
# Requires Cygwin packages:
#   mingw64-i686-pkg-config
#
#
####

echo $PKG_CONFIG_PATH 
export PKG_CONFIG_PATH=/usr/i686-w64-mingw32/sys-root/mingw/lib/pkgconfig

####
$   i686-w64-mingw32-g++ --version
## Result
i686-w64-mingw32-g++ (GCC) 4.9.2
##
$   i686-w64-mingw32-g++ -pthread
### Good Result
i686-w64-mingw32-g++: fatal error: no input files
compilation terminated.
###
### Bad Result
####

$   echo $CYGWIN
## Result
nodosfilewarning
##
$ cd ~/devel/wxWidgets-git

git status -uno
git fetch upstream --prune && git fetch origin --prune
git checkout master
git rebase upstream/master && git status -uno
git push
git status -uno


$ mkdir build_mingw_cb_msw_wx3.1.x_shared_multilib_unicode

$ cd ~/devel/wxWidgets-git/build_mingw_cb_msw_wx3.1.x_shared_multilib_unicode
# make uninstall
export CPPFLAGS=""
export CXXFLAGS="-Wno-attributes"
##
##
# Do NOT use host unless it differs from build
../configure --prefix=/usr/i686-w64-mingw32/sys-root/mingw/opt \
      --host=i686-w64-mingw32 \
      --disable-sys-libs \
      --enable-compat28 \
      --with-msw \
      --with-cxx=11 \
      --enable-graphics_ctx \
      --disable-monolithic \
      --enable-shared \
      --enable-xrc \
      --disable-universal \
      --disable-precomp-headers \
      --enable-unicode
###
Configured wxWidgets 3.1.1 for `i686-w64-mingw32'

  Which GUI toolkit should wxWidgets use?                 msw
  Should wxWidgets be compiled into single library?       no
  Should wxWidgets be linked as a shared library?         yes
  Should wxWidgets support Unicode?                       yes (using wchar_t)
  What level of wxWidgets compatibility should be enabled?
                                       wxWidgets 2.8      yes
                                       wxWidgets 3.0      yes
  Which libraries should wxWidgets use?
                                       STL                no
                                       jpeg               builtin
                                       png                builtin
                                       regex              builtin
                                       tiff               builtin
                                       zlib               builtin
                                       expat              builtin
                                       libmspack          no
                                       sdl                no
###
#
#   make clean && make && make install
$   make && make install
###
 The installation of wxWidgets is finished.  On certain
 platforms (e.g. Linux) you'll now have to run ldconfig
 if you installed a shared library and also modify the
 LD_LIBRARY_PATH (or equivalent) environment variable.
###
$   which wx-config
$   echo $PATH
#   /usr/local/bin:/usr/bin:/usr/lib/lapack
$   export PATH=/usr/bin:/usr/i686-w64-mingw32/sys-root/mingw/opt/bin:$PATH
$   which wx-config
$   wx-config --prefix
$   wx-config --libs

# Work around bug in wx-config
cd /usr/i686-w64-mingw32/sys-root/mingw/opt/lib
cp --update libwx_baseu-3.1-i686-w64-mingw32.dll.a          libwx_baseu-3.1.a
cp --update libwx_baseu_net-3.1-i686-w64-mingw32.dll.a      libwx_baseu_net-3.1.a
cp --update libwx_baseu_xml-3.1-i686-w64-mingw32.dll.a      libwx_baseu_xml-3.1.a
cp --update libwx_mswu_adv-3.1-i686-w64-mingw32.dll.a       libwx_mswu_adv-3.1.a
cp --update libwx_mswu_aui-3.1-i686-w64-mingw32.dll.a       libwx_mswu_aui-3.1.a
cp --update libwx_mswu_core-3.1-i686-w64-mingw32.dll.a      libwx_mswu_core-3.1.a
cp --update libwx_mswu_html-3.1-i686-w64-mingw32.dll.a      libwx_mswu_html-3.1.a
cp --update libwx_mswu_propgrid-3.1-i686-w64-mingw32.dll.a  libwx_mswu_propgrid-3.1.a
cp --update libwx_mswu_qa-3.1-i686-w64-mingw32.dll.a        libwx_mswu_qa-3.1.a
cp --update libwx_mswu_richtext-3.1-i686-w64-mingw32.dll.a  libwx_mswu_richtext-3.1.a
cp --update libwx_mswu_xrc-3.1-i686-w64-mingw32.dll.a       libwx_mswu_xrc-3.1.a

#########

####
#
# Requires Cygwin packages:
#   libtool     2.4.6-3
#   automake
#
####


cd ~/devel/codeblocks_https_metadata-git

git fetch && git status -uno
git checkout -- src/sdk/wxscintilla/Readme
git checkout -- debian/changelog
git checkout build_cfg/wxMSW
git pull --rebase && git status -uno

git rebase downstream/master
# git rebase -i downstream/master
# git push downstream --force-with-lease

git format-patch downstream/master

/usr/i686-w64-mingw32/sys-root/mingw/opt/bin/wx-config --exec-prefix=i686-w64-mingw32 --list

/usr/i686-w64-mingw32/sys-root/mingw/opt/bin/wx-config --host=i686-w64-mingw32 --list

/usr/i686-w64-mingw32/sys-root/mingw/opt/bin/wx-config --list
##
    Default config is msw-unicode-3.1

  Default config will be used for output
  though it is not installed in: /usr/i686-w64-mingw32/sys-root/mingw/opt

  Also available in /usr/i686-w64-mingw32/sys-root/mingw/opt:
    i686-w64-mingw32-msw-unicode-3.1
##


echo $ACLOCAL_FLAGS
export ACLOCAL_FLAGS="-I `/usr/i686-w64-mingw32/sys-root/mingw/opt/bin/wx-config --prefix`/share/aclocal"
echo $ACLOCAL_FLAGS

echo $PATH
# /usr/local/bin:/usr/bin:/usr/lib/lapack

./bootstrap

##
# AutoVersioning, BrowseTracker, byogames, Cccc, CppCheck, cbkoders, codesnippets,
# codestat, copystrings, Cscope, DoxyBlocks, dragscroll, 
# EditorConfig, EditorTweaks, envvars,
# FileManager, headerfixup, help, hexeditor, incsearch, 
# keybinder, libfinder, MouseSap,
# NassiShneiderman, ProjectOptionsManipulator, profiler, regex, 
# ReopenEditor, exporter, smartindent, spellchecker,
# symtab, ThreadSearch, ToolsPlus, Valgrind, wxcontrib, wxsmith, 
# wxsmithcontrib, wxsmithaui
##

# Plugins with issues:
#   keybinder uses wxWidgets files wrong under wxMSW; not worth fixing
#   Valgrind makes no sense to build under windows.

export CPPFLAGS=""
export CXXFLAGS="-Wno-attributes"
export LDFLAGS=""
./configure --host=i686-w64-mingw32 \
    --prefix=/usr/i686-w64-mingw32/sys-root/mingw/opt \
    --with-contrib-plugins="all,-keybinder,-spellchecker" \
    --with-platform=msw \
    --enable-debug \
    --disable-pch \
    --with-wx-config=/usr/i686-w64-mingw32/sys-root/mingw/opt/bin/wx-config

####
#
# Requires Cygwin packages:
#   zip
#   mingw64-i686-boost
#   mingw64-i686-hunspell
#
####

# export below fixes auto_revision.exe: error while loading shared libraries: ?: cannot open shared object file: No such file or directory
# export PATH=$PATH:/usr/i686-w64-mingw32/sys-root/mingw/bin
echo $PATH
# /usr/local/bin:/usr/bin:/usr/lib/lapack:/usr/i686-w64-mingw32/sys-root/mingw/bin

make

#  make clean && make && make install

#  make clean && make

## make && make install


In order to run Code::Blocks
####
# Requires Cygwin packages:
#
####

echo $PATH
export PATH=/usr/i686-w64-mingw32/sys-root/mingw/opt/lib:/usr/i686-w64-mingw32/sys-root/mingw/bin:$PATH

# Copied the src\exchndl\win32\bin files to usr\i686-w64-mingw32\sys-root\mingw\opt\bin

$   /usr/i686-w64-mingw32/sys-root/mingw/opt/bin/codeblocks.exe --help

# --prefix=C:/Apps32/Cygwin/usr/i686-w64-mingw32/sys-root/mingw/opt/share/codeblocks
# --prefix=/usr/i686-w64-mingw32/sys-root/mingw/opt/share/codeblocks
# --prefix=<str>            # Sets the shared data directory prefix. 
# --verbose                 # Enable logging of c::b errors 
# --user-data-dir=<path>    # specify an alternative directory for user settings and user installed plugins 
$   /usr/i686-w64-mingw32/sys-root/mingw/opt/bin/codeblocks.exe --verbose --debug-log --prefix=C:/Apps32/Cygwin/usr/i686-w64-mingw32/sys-root/mingw/opt/share/codeblocks

## Run message box
---------------------------
Cannot find resources...
Code::Blocks was configured to be installed in '\usr\i686-w64-mingw32\sys-root\mingw\opt\share\codeblocks\share\codeblocks'.
Please use the command-line switch '--prefix' or set the CODEBLOCKS_DATA_DIR environment variable to point where Code::Blocks is installed,
or try re-installing the application...
---------------------------

## Run errors

## Link error(s) below

## Compile error(s) below

## Makefile error(s) below

make[5]: Entering directory '/cygdrive/c/Users/stahta01/cygwin/devel/codeblocks_https_metadata-git/src/plugins/contrib/SpellChecker/hunspell'
make[5]: *** No rule to make target 'all'.  Stop.
make[5]: Leaving directory '/cygdrive/c/Users/stahta01/cygwin/devel/codeblocks_https_metadata-git/src/plugins/contrib/SpellChecker/hunspell'
Makefile:695: recipe for target 'all-recursive' failed
make[4]: *** [all-recursive] Error 1


## Notes
CODEBLOCKS_PLATFORM is this gtk or msw

see why mingw64-i686-hunspell-1.3.3-1.src created no lib

CB_HUNSPELL_CFLAGS
CB_HUNSPELL_LIBS

Remove sdk/wxscintilla/Makefile.am from 0004-Makefile.am-Added-DLL-import-export-defines.-Thanks-.patch
Create new patch to patch sdk/wxscintilla/Makefile.am

## ToDo: change LogError() to output to a file.

Changed to testing for define of WIN32 in patch file.

In wxscintilla, ignore the define of GTK.

acinclude.m4
    PLATFORM_CFLAGS
    PLATFORM_LIBS               Add to Makefile
    CODEBLOCKS_PLATFORM
    SHARED_FLAGS                Add to Makefile
    PLUGIN_FLAGS                Add to Makefile

Remove "-Xlinker --export-all-symbols" from acinclude.m4
Move configure.ac part of "* configure: Added AM_CONDITIONAL HOST_MINGW32." to acinclude.m4
