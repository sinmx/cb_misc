git remote -v
#   git remote add        wxpr        https://github.com/stahta01/wxWidgets.git
#   git remote add        origin      https://github.com/stahta01/wxWidgets_3_0_branch.git


$ git branch --list
  WX_3_0_3_BRANCH
* WX_3_0_BRANCH
  build/makefile.gcc              # Need to test changes
  build/mingwPCH
  build/nonGUI_3_0_X              # test building
  build/reducedGUI_3_0_X
  build/testReducedGUI_3_0_X      # test building
  deprecated/WX_3_0_BRANCH        #
  inwork
  staging3.0                      # Wait till PR is accepted or rejected
  testing3.0                      # test building
  wxwidgets3.0.3_git
  wxwidgets3.0.3_git-lfs


git fetch origin --prune


git checkout WX_3_0_BRANCH && git pull wxpr WX_3_0_BRANCH && git status -uno
git push -u origin

git checkout WX_3_0_3_BRANCH && git pull wxpr WX_3_0_3_BRANCH && git status -uno
git push -u origin


git checkout staging3.0 && git pull && git status -uno
#   git rebase -i WX_3_0_BRANCH
git push


git checkout testing3.0 && git pull && git rebase WX_3_0_BRANCH && git status -uno
#   git rebase -i WX_3_0_BRANCH
git push --force-with-lease

git checkout wxwidgets3.0.3_git && git pull && git rebase WX_3_0_3_BRANCH && git status -uno
#   git format-patch WX_3_0_3_BRANCH
git push --force-with-lease

git checkout wxwidgets3.0.3_git-lfs && git pull && git rebase wxwidgets3.0.3_git && git status -uno
#   git format-patch wxwidgets3.0.3_git
git push --force-with-lease



git checkout inwork && git pull && git rebase WX_3_0_BRANCH && git status -uno
#   git rebase deprecated/WX_3_0_BRANCH
#   git rebase staging3.0
#   git rebase -i WX_3_0_BRANCH
#   git format-patch WX_3_0_BRANCH
git push --force-with-lease



git checkout deprecated/WX_3_0_BRANCH && git pull && git rebase WX_3_0_BRANCH && git status -uno
#   git rebase --ignore-date WX_3_0_BRANCH
git push --force-with-lease

git checkout build/mingwPCH && git pull && git rebase WX_3_0_BRANCH && git status -uno
git push --force-with-lease


git checkout build/makefile.gcc && git pull && git rebase WX_3_0_BRANCH && git status -uno
#   git rebase -i WX_3_0_BRANCH
git push --force-with-lease

git checkout build/reducedGUI_3_0_X && git pull && git rebase WX_3_0_BRANCH && git status -uno
#   git rebase -i WX_3_0_BRANCH
#   git format-patch WX_3_0_BRANCH
git push --force-with-lease


git checkout build/testReducedGUI_3_0_X && git pull && git rebase WX_3_0_BRANCH && git status -uno
#   git rebase -i build/reducedGUI_3_0_X
git push --force-with-lease


git checkout build/nonGUI_3_0_X && git pull && git rebase WX_3_0_BRANCH && git status -uno
#   git rebase build/testReducedGUI_3_0_X
#   git rebase -i WX_3_0_BRANCH
#   git format-patch WX_3_0_BRANCH
git push --force-with-lease


git fetch origin --prune
git checkout WX_3_0_BRANCH && git fsck --connectivity-only && git prune && git fsck && exit

#### Things to try if "git fsck --connectivity-only" fails with "Out of memory"
#    Do a repo backup before proceeding!
#    I am guessing sometimes "fsck" fixes issues for "connectivity-only"
git fsck
git gc --prune=all                                      # BACKUP repo before doing
#### if no better; more risky things to try next  
##   try git reflog expire commands below, one at a time, test to see if fixed after each one:
#   git reflog expire --expire-unreachable=all --all    # BACKUP repo before doing
#   git reflog expire --stale-fix --all                 # BACKUP repo before doing
##
#   git fsck --no-full --no-reflogs
#   git fsck --no-full
#   git reflog show 
