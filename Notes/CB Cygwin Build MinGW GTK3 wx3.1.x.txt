####
# Requires Cygwin packages:
#   mingw64-i686-gtk3
#   mingw64-i686-pkg-config
#
# For wx3.0, You will need GTK+ 2.6 or higher.
# For wx2.8, You will need GTK+ 2.0 or higher.
#
####

C:\Apps32\Cygwin\usr\i686-w64-mingw32\sys-root\mingw
C:\Apps32\Cygwin\usr\i686-w64-mingw32\sys-root\mingw\lib\pkgconfig

pkg-config --list-all

echo $PKG_CONFIG_PATH 
export PKG_CONFIG_PATH=/usr/i686-w64-mingw32/sys-root/mingw/lib/pkgconfig

i686-w64-mingw32-pkg-config gtk+-3.0 --libs
### Good Result
-lgtk-3 -lgdk-3 -lgdi32 -limm32 -lshell32 -lole32 -Wl,-luuid -lwinmm -ldwmapi -lz -lepoxy -lpangocairo-1.0 -lpangoft2-1.0 -lharfbuzz -lpangowin32-1.0 -lgdi32 -lusp10 -lpango-1.0 -lm -latk-1.0 -lcairo-gobject -lcairo -lz -lpixman-1 -lfontconfig -lexpat -lfreetype -lbz2 -lz -lpng16 -lz -lexpat -lfreetype -lbz2 -lz -lpng16 -lz -lgdk_pixbuf-2.0 -lpng16 -lz -lgio-2.0 -lz -lgmodule-2.0 -lgobject-2.0 -lffi -lglib-2.0 -lintl -lws2_32 -lole32 -lwinmm -lshlwapi -lintl
###


####
$   i686-w64-mingw32-g++ --version
## Result
i686-w64-mingw32-g++ (GCC) 4.9.2
##
$   i686-w64-mingw32-g++ -pthread
### Good Result
i686-w64-mingw32-g++: fatal error: no input files
compilation terminated.
###
### Bad Result
####

$   echo $CYGWIN
## Result
nodosfilewarning
##
$ cd ~/devel/wxWidgets-git

git status -uno
git fetch upstream --prune && git fetch origin --prune
git checkout cygwin
git rebase upstream/master
git pull
git format-patch upstream/master
0001-wxQT-Fixed-warnings-variable-may-be-undefined.-Thank.patch
0002-wxQT-Removed-files-that-do-NOT-exist.-Thanks-stahta0.patch
0003-wxGTK-Changed-guards-for-wxUSE_SOCKETS-files.-Thanks.patch
0004-configure.in-wxGTK-fixes-under-Windows-Thanks-stahta.patch
0005-wxQT-Removed-two-duplicate-files.patch

$ mkdir build_mingw_cb_gtk_wx3.1.x_shared_multilib_unicode

$ cd ~/devel/wxWidgets-git/build_mingw_cb_gtk_wx3.1.x_shared_multilib_unicode
# make uninstall
export CPPFLAGS=""
export CXXFLAGS="-Wno-attributes"
##
--enable-checklst # ?needed to stop tiff build error?
--disable-rearrangectrl # ?needed to stop tiff build error?
--disable-debugreport # QA lib errors out 
--disable-gtktest # gtk test failed
--disable-sockets # done to speed up build of wxWidgets; since sockets does NOT work.
                  # CB needs edited to comment out wxURL code.
##  configure:34222: WARNING: socket library not found - sockets will be disabled
#!! Cygwin built MinGW wxGTK likely does NOT have ability to support sockets
##
# Do NOT use host unless it differs from build and maybe not even then
$  ../configure --prefix=/opt/mingw/cb/gtk/wx \
      --host=i686-w64-mingw32 \
      --disable-gtktest \
      --enable-checklst \
      --disable-rearrangectrl \
      --disable-debugreport \
      --disable-sys-libs \
      --enable-compat28 \
      --with-gtk=3 \
      --with-cxx=11 \
      --enable-graphics_ctx \
      --disable-monolithic \
      --enable-shared \
      --enable-xrc \
      --without-gtkprint \
      --without-gnomeprint \
      --disable-universal \
      --disable-precomp-headers \
      --enable-unicode
###
Configured wxWidgets 3.1.1 for `i686-w64-mingw32'

  Which GUI toolkit should wxWidgets use?                 GTK+ 3
  Should wxWidgets be compiled into single library?       no
  Should wxWidgets be linked as a shared library?         yes
  Should wxWidgets support Unicode?                       yes (using wchar_t)
  What level of wxWidgets compatibility should be enabled?
                                       wxWidgets 2.8      yes
                                       wxWidgets 3.0      yes
  Which libraries should wxWidgets use?
                                       STL                no
                                       jpeg               builtin
                                       png                builtin
                                       regex              builtin
                                       tiff               builtin
                                       zlib               builtin
                                       expat              builtin
                                       libmspack          no
                                       sdl                no
###
#!! Hand edit Makefile removed -lX11 from EXTRALIBS_GUI
#!! Hand edit Makefile.in removed coredll_msw_display.o from GTK_WIN32_SRC (src/msw/display.cpp)
<set var="NET_WIN32_SRC" hints="files">
    src/msw/sockmsw.cpp
    src/msw/urlmsw.cpp
</set>
<set var="NET_WIN32_HDR" hints="files">
</set>
#
#   make clean && make && make install
$   make && make install
###
 The installation of wxWidgets is finished.  On certain
 platforms (e.g. Linux) you'll now have to run ldconfig
 if you installed a shared library and also modify the
 LD_LIBRARY_PATH (or equivalent) environment variable.
###
$   which wx-config
$   echo $PATH
$   export PATH=/usr/bin:/opt/mingw/cb/gtk/wx/bin:$PATH
$   which wx-config
$   wx-config --prefix
$   wx-config --libs


#########

####
# Requires Cygwin packages:
#   libtool     2.4.6-3
#   automake
#   zip
#
####


cd ~/devel/codeblocks_https_metadata-git

git status -uno
git checkout -- src/sdk/wxscintilla/Readme
git checkout -- debian/changelog
git pull --rebase


/opt/mingw/cb/gtk/wx/bin/wx-config --list

echo $ACLOCAL_FLAGS
export ACLOCAL_FLAGS="-I `/opt/mingw/cb/gtk/wx/bin/wx-config --prefix`/share/aclocal"
echo $ACLOCAL_FLAGS

./bootstrap
export CPPFLAGS=""
export CXXFLAGS="-DGTK -Wno-attributes"
echo $CXXFLAGS

#  --enable-static
 ./configure --host=i686-w64-mingw32 --prefix=/opt/mingw/cb/gtk/wx --with-platform=gtk --enable-debug --host=i686-pc-cygwin --disable-xpmanifest --disable-pch --with-wx-config=/opt/mingw/cb/gtk/wx/bin/wx-config


#$  make clean && make && make install

make

make install

#  make && make install


In order to run Code::Blocks
####
# Requires Cygwin packages:
#
####


echo $PATH
export PATH=/opt/mingw/cb/gtk/wx/lib:$PATH


$   /opt/mingw/cb/gtk/wx/bin/codeblocks.exe --debug-log

git add configure.in
git commit --message="configure.in: wxGTK fixes under Windows (Thanks stahta01)"

diff --git a/Makefile.in b/Makefile.in
old mode 100644
new mode 100755
index 4a192c1..073fae6
--- a/Makefile.in
+++ b/Makefile.in
@@ -2194,6 +2194,7 @@ COND_PLATFORM_WIN32_1_GTK_PLATFORM_HDR =  \
        wx/msw/ole/safearray.h \
        wx/msw/ole/uuid.h \
        wx/msw/dib.h \
+       wx/msw/init.h \
        wx/unix/fontutil.h
 @COND_PLATFORM_WIN32_1@GTK_PLATFORM_HDR = $(COND_PLATFORM_WIN32_1_GTK_PLATFORM_HDR)
 @COND_TOOLKIT_MSW@UNIV_PLATFORM_HDR = wx/msw/evtloop.h
@@ -13574,7 +13575,6 @@ COND_PLATFORM_WIN32_1___GTK_PLATFORM_SRC_OBJECTS_1_1 =  \
        coredll_uuid.o \
        coredll_msw_dialup.o \
        coredll_dib.o \
-       coredll_msw_display.o \
        coredll_utilswin.o \
        coredll_unix_fontenum.o \
        coredll_unix_fontutil.o

if test "$USE_WIN32" = 1 ; then
if test "$USE_UNIX" = 1 ; then
if test "$wxUSE_UNIX" = "yes"; then
if test "$wxUSE_STACKWALKER" = "yes" -a "$USE_WIN32" != 1 -a "$USE_UNIX" != 1; then
    AC_MSG_WARN([wxStackWalker is only available on Win32 and UNIX... disabled])
    wxUSE_STACKWALKER=no
fi

if test "$wxUSE_SOCKETS" = "yes"; then
    dnl under MSW we always have sockets
    if test "$TOOLKIT" != "MSW"; then
        dnl under Solaris and OS/2, socket functions live in -lsocket
        AC_CHECK_FUNC(socket,,
            [
                AC_CHECK_LIB(socket, socket,
                    if test "$INET_LINK" != " -lsocket"; then
                        INET_LINK="$INET_LINK -lsocket"
                    fi,
                    [
                        AC_MSG_WARN([socket library not found - sockets will be disabled])
                        wxUSE_SOCKETS=no
                    ]
                )
            ]
        )
    fi
fi

NOTES: Below ignore till have build issues.

$ uname
CYGWIN_NT-6.1


if test "x$LINUX_TRUE" = "x" -o \
        "x$DARWIN_TRUE" = "x" ; then
    AX_CXX_COMPILE_STDCXX(11, noext)
else
    AX_CXX_COMPILE_STDCXX(11, ext)
fi

# Not added this code; yet, because the error I expected did NOT happen.
if test "x$LINUX_TRUE" = "x" -o \
        "x$DARWIN_TRUE" = "x" ; then
    CPPFLAGS="$CPPFLAGS -ansi -DTIXML_USE_STL"
else
    CPPFLAGS="$CPPFLAGS -DTIXML_USE_STL"
fi

$ mintty --help
Usage: mintty [OPTION]... [ PROGRAM [ARG]... | - ]

Start a new terminal session running the specified program or the user's shell.
If a dash is given instead of a program, invoke the shell as a login shell.

Options:
  -c, --config FILE     Load specified config file
  -e, --exec            Treat remaining arguments as the command to execute
  -h, --hold never|start|error|always  Keep window open after command finishes
  -i, --icon FILE[,IX]  Load window icon from file, optionally with index
  -l, --log FILE|-      Log output to file or stdout
  -o, --option OPT=VAL  Override config file option with given value
  -p, --position X,Y    Open window at specified coordinates
  -s, --size COLS,ROWS  Set screen size in characters
  -t, --title TITLE     Set window title (default: the invoked command)
  -u, --utmp            Create a utmp entry
  -w, --window normal|min|max|full|hide  Set initial window state
      --class CLASS     Set window class name (default: mintty)
  -H, --help            Display help and exit
  -V, --version         Print version information and exit
