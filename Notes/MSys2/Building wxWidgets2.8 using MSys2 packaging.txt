Building wxWidgets using MSys2 packaging.txt

# Open MSys2 command prompt


# One time build tools installation
pacman -S base-devel
# for building mingw32 packages
pacman -S mingw-w64-i686-toolchain
# for building mingw64 packages
pacman -S mingw-w64-x86_64-toolchain


# Change to MinGW Package git repo.
cd C:/Devel/open_source_code/version_control/MINGW_packages-git

# Change to wxWidgets folder
cd mingw-w64-wxwidgets2.8

####
# Building 64 bit on 32 bit Windows failed for me; but, it was NOT a compiler error; it was an unpacking error
/c/Devel/open_source_code/version_control/MINGW_packages-git/mingw-w64-wxwidgets2.8/PKGBUILD: line 38: cd: /c/Devel/open_source_code/version_control/MINGW_packages-git/mingw-w64-wxwidgets2.8/src/wxWidgets-2.8.12: No such file or directory
==> ERROR: A failure occurred in prepare().
    Aborting...
####

# Build the 32 bit and 64 packages
makepkg-mingw -sLf
# Build only the 32 bit package
#  MINGW_INSTALLS=mingw32 makepkg-mingw -sLf
# Build only the 64 bit package
#  MINGW_INSTALLS=mingw64 makepkg-mingw -sLf


# Look for the packages
ls mingw-w64-*-*-*-*.pkg.tar.xz

# Install a 'local' 32 bit package
pacman -U mingw-w64-i686-wxWidgets-2.8.12-0-any.pkg.tar.xz


sha256sum wxWidgets-2.8.12.tar.bz2

Usage: sha256sum [OPTION]... [FILE]...
Print or check SHA256 (256-bit) checksums.

With no FILE, or when FILE is -, read standard input.

  -b, --binary         read in binary mode (default unless reading tty stdin)
  -c, --check          read SHA256 sums from the FILEs and check them
      --tag            create a BSD-style checksum
  -t, --text           read in text mode (default if reading tty stdin)

The following five options are useful only when verifying checksums:
      --ignore-missing  don't fail or report status for missing files
      --quiet          don't print OK for each successfully verified file
      --status         don't output anything, status code shows success
      --strict         exit non-zero for improperly formatted checksum lines
  -w, --warn           warn about improperly formatted checksum lines

      --help     display this help and exit
      --version  output version information and exit


Usage: /usr/bin/makepkg [options]

Options:
  -A, --ignorearch Ignore incomplete arch field in PKGBUILD
  -c, --clean      Clean up work files after build
  -C, --cleanbuild Remove $srcdir/ dir before building the package
  -d, --nodeps     Skip all dependency checks
  -e, --noextract  Do not extract source files (use existing $srcdir/ dir)
  -f, --force      Overwrite existing package
  -g, --geninteg   Generate integrity checks for source files
  -h, --help       Show this help message and exit
  -i, --install    Install package after successful build
  -L, --log        Log package build process
  -m, --nocolor    Disable colorized output messages
  -o, --nobuild    Download and extract files only
  -p <file>        Use an alternate build script (instead of 'PKGBUILD')
  -r, --rmdeps     Remove installed dependencies after a successful build
  -R, --repackage  Repackage contents of the package without rebuilding
  -s, --syncdeps   Install missing dependencies with pacman
  -S, --source     Generate a source-only tarball without downloaded sources
  -V, --version    Show version information and exit
  --allsource      Generate a source-only tarball including downloaded sources
  --check          Run the check() function in the PKGBUILD
  --config <file>  Use an alternate config file (instead of '/etc/makepkg.conf')
  --holdver        Do not update VCS sources
  --key <key>      Specify a key to use for gpg signing instead of the default
  --noarchive      Do not create package archive
  --nocheck        Do not run the check() function in the PKGBUILD
  --noprepare      Do not run the prepare() function in the PKGBUILD
  --nosign         Do not create a signature for the package
  --packagelist    Only list packages that would be produced, without PKGEXT
  --printsrcinfo   Print the generated SRCINFO and exit
  --sign           Sign the resulting package with gpg
  --skipchecksums  Do not verify checksums of the source files
  --skipinteg      Do not perform any verification checks on source files
  --skippgpcheck   Do not verify source files with PGP signatures
  --verifysource   Download source files (if needed) and perform integrity checks

These options can be passed to pacman:

  --asdeps         Install packages as non-explicitly installed
  --needed         Do not reinstall the targets that are already up to date
  --noconfirm      Do not ask for confirmation when resolving dependencies
  --noprogressbar  Do not show a progress bar when downloading files

If -p is not specified, makepkg will look for 'PKGBUILD'

