Building Packages https://sourceforge.net/p/msys2/wiki/Contributing%20to%20MSYS2/
https://github.com/msys2/MINGW-packages/tree/master/mingw-w64-codelite
https://ascendingcreations.com/thread-587.html
https://bitbucket.org/msys2/mingw-packages/src

wxStandardPaths

 git checkout master
 git reset --hard 440496258e7d56ca0e3da257825e85be36e667e2
 git push --force-with-lease

0001-cbp-Added-define-of-USE_HOST_MSYS2.patch
0002-USE_HOST_MSYS2-Added-defined-USE_HOST_MSYS2-checks-t.patch
0003-USE_HOST_MSYS2-Added-defined-USE_HOST_MSYS2-checks-t.patch
0004-USE_HOST_MSYS2-Added-defined-USE_HOST_MSYS2-checks-t.patch
0005-USE_HOST_MSYS2-Added-defined-USE_HOST_MSYS2-checks-t.patch


    // Unix: prefix/share/appname   Windows: EXE path
    m_Macros[_T("GET_DATA_DIR")]            = ((const wxStandardPaths&)wxStandardPaths::Get()).GetDataDir();
    // Unix: /etc/appname   Windows: EXE path
    m_Macros[_T("GET_LOCAL_DATA_DIR")]      = ((const wxStandardPaths&)wxStandardPaths::Get()).GetLocalDataDir();
    // Unix: ~   Windows: C:\Documents and Settings\username\Documents
    m_Macros[_T("GET_DOCUMENTS_DIR")]       = ((const wxStandardPaths&)wxStandardPaths::Get()).GetDocumentsDir();
    // Unix: /etc   Windows: C:\Documents and Settings\All Users\Application Data
    m_Macros[_T("GET_CONFIG_DIR")]          = ((const wxStandardPaths&)wxStandardPaths::Get()).GetConfigDir();
    // Unix: ~   Windows: C:\Documents and Settings\username\Application Data\appname
    m_Macros[_T("GET_USER_CONFIG_DIR")]     = ((const wxStandardPaths&)wxStandardPaths::Get()).GetUserConfigDir();
    // Unix: ~/.appname   Windows: C:\Documents and Settings\username\Application Data
    m_Macros[_T("GET_USER_DATA_DIR")]       = ((const wxStandardPaths&)wxStandardPaths::Get()).GetUserDataDir();
    // Unix: ~/.appname   Windows: C:\Documents and Settings\username\Local Settings\Application Data\appname
    m_Macros[_T("GET_USER_LOCAL_DATA_DIR")] = ((const wxStandardPaths&)wxStandardPaths::Get()).GetUserLocalDataDir();
    // ALl platforms: A writable, temporary directory
    m_Macros[_T("GET_TEMP_DIR")]            = ((const wxStandardPaths&)wxStandardPaths::Get()).GetTempDir();
